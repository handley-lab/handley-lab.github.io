{% raw %}

Title: Create a Markdown Blog Post Integrating Research Details and a Featured Paper
====================================================================================

This task involves generating a Markdown file (ready for a GitHub-served Jekyll site) that integrates our research details with a featured research paper. The output must follow the exact format and conventions described below.

====================================================================================
Output Format (Markdown):
------------------------------------------------------------------------------------
---
layout: post
title:  "A comparison of Bayesian sampling algorithms for high-dimensional
  particle physics and cosmology applications"
date:   2024-09-27
categories: papers
---
![AI generated image](/assets/images/posts/2024-09-27-2409.18464.png)

<!-- BEGINNING OF GENERATED POST -->
<!-- END OF GENERATED POST -->

<img src="/assets/group/images/will_handley.jpg" alt="Will Handley" style="width: auto; height: 25vw;">

Content generated by [gemini-2.5-pro](https://deepmind.google/technologies/gemini/) using [this prompt](/prompts/content/2024-09-27-2409.18464.txt).

Image generated by [imagen-3.0-generate-002](https://deepmind.google/technologies/gemini/) using [this prompt](/prompts/images/2024-09-27-2409.18464.txt).

------------------------------------------------------------------------------------
====================================================================================

Please adhere strictly to the following instructions:

====================================================================================
Section 1: Content Creation Instructions
====================================================================================

1. **Generate the Page Body:**
   - Write a well-composed, engaging narrative that is suitable for a scholarly audience interested in advanced AI and astrophysics.
   - Ensure the narrative is original and reflective of the tone and style and content in the "Homepage Content" block (provided below), but do not reuse its content.
   - Use bullet points, subheadings, or other formatting to enhance readability.

2. **Highlight Key Research Details:**
   - Emphasize the contributions and impact of the paper, focusing on its methodology, significance, and context within current research.
   - Specifically highlight the lead author ({'name': 'Joshua Albert'}). When referencing any author, use Markdown links from the Author Information block (choose academic or GitHub links over social media).

3. **Integrate Data from Multiple Sources:**
   - Seamlessly weave information from the following:
     - **Paper Metadata (YAML):** Essential details including the title and authors.
     - **Paper Source (TeX):** Technical content from the paper.
     - **Bibliographic Information (bbl):** Extract bibliographic references.
     - **Author Information (YAML):** Profile details for constructing Markdown links.
   - Merge insights from the Paper Metadata, TeX source, Bibliographic Information, and Author Information blocks into a coherent narrativeâ€”do not treat these as separate or isolated pieces.
   - Insert the generated narrative between the HTML comments:
     <!-- BEGINNING OF GENERATED POST --> and <!-- END OF GENERATED POST -->

4. **Generate Bibliographic References:**
   - Review the Bibliographic Information block carefully.
   - For each reference that includes a DOI or arXiv identifier:
     - For DOIs, generate a link formatted as:
       [10.1234/xyz](https://doi.org/10.1234/xyz)
     - For arXiv entries, generate a link formatted as:
       [2103.12345](https://arxiv.org/abs/2103.12345)
    - **Important:** Do not use any LaTeX citation commands (e.g., `\cite{...}`). Every reference must be rendered directly as a Markdown link. For example, instead of `\cite{mycitation}`, output `[mycitation](https://doi.org/mycitation)`
        - **Incorrect:** `\cite{10.1234/xyz}`  
        - **Correct:** `[10.1234/xyz](https://doi.org/10.1234/xyz)`
   - Ensure that at least three (3) of the most relevant references are naturally integrated into the narrative.
   - Ensure that the link to the Featured paper [2409.18464](https://arxiv.org/abs/2409.18464) is included in the first sentence.

5. **Final Formatting Requirements:**
   - The output must be plain Markdown; do not wrap it in Markdown code fences.
   - Preserve the YAML front matter exactly as provided.

====================================================================================
Section 2: Provided Data for Integration
====================================================================================

1. **Homepage Content (Tone and Style Reference):**
```markdown
---
layout: home
---

![AI generated image](/assets/images/index.png)

<!-- START OF WEBSITE SUMMARY -->
The Handley Research Group stands at the forefront of cosmological exploration, pioneering novel approaches that fuse fundamental physics with the transformative power of artificial intelligence. We are a dynamic team of researchers, including PhD students, postdoctoral fellows, and project students, based at the University of Cambridge. Our mission is to unravel the mysteries of the Universe, from its earliest moments to its present-day structure and ultimate fate. We tackle fundamental questions in cosmology and astrophysics, with a particular focus on leveraging advanced Bayesian statistical methods and AI to push the frontiers of scientific discovery. Our research spans a wide array of topics, including the [primordial Universe](https://arxiv.org/abs/1907.08524), [inflation](https://arxiv.org/abs/1807.06211), the nature of [dark energy](https://arxiv.org/abs/2503.08658) and [dark matter](https://arxiv.org/abs/2405.17548), [21-cm cosmology](https://arxiv.org/abs/2210.07409), the [Cosmic Microwave Background (CMB)](https://arxiv.org/abs/1807.06209), and [gravitational wave astrophysics](https://arxiv.org/abs/2411.17663).

### Our Research Approach: Innovation at the Intersection of Physics and AI

At The Handley Research Group, we develop and apply cutting-edge computational techniques to analyze complex astronomical datasets. Our work is characterized by a deep commitment to principled [Bayesian inference](https://arxiv.org/abs/2205.15570) and the innovative application of [artificial intelligence (AI) and machine learning (ML)](https://arxiv.org/abs/2504.10230).

**Key Research Themes:**
*   **Cosmology:** We investigate the early Universe, including [quantum initial conditions for inflation](https://arxiv.org/abs/2002.07042) and the generation of [primordial power spectra](https://arxiv.org/abs/2112.07547). We explore the enigmatic nature of [dark energy, using methods like non-parametric reconstructions](https://arxiv.org/abs/2503.08658), and search for new insights into [dark matter](https://arxiv.org/abs/2405.17548). A significant portion of our efforts is dedicated to [21-cm cosmology](https://arxiv.org/abs/2104.04336), aiming to detect faint signals from the Cosmic Dawn and the Epoch of Reionization.
*   **Gravitational Wave Astrophysics:** We develop methods for [analyzing gravitational wave signals](https://arxiv.org/abs/2411.17663), extracting information about extreme astrophysical events and fundamental physics.
*   **Bayesian Methods & AI for Physical Sciences:** A core component of our research is the development of novel statistical and AI-driven methodologies. This includes advancing [nested sampling techniques](https://arxiv.org/abs/1506.00171) (e.g., [PolyChord](https://arxiv.org/abs/1506.00171), [dynamic nested sampling](https://arxiv.org/abs/1704.03459), and [accelerated nested sampling with $\beta$-flows](https://arxiv.org/abs/2411.17663)), creating powerful [simulation-based inference (SBI) frameworks](https://arxiv.org/abs/2504.10230), and employing [machine learning for tasks such as radiometer calibration](https://arxiv.org/abs/2504.16791), [cosmological emulation](https://arxiv.org/abs/2503.13263), and [mitigating radio frequency interference](https://arxiv.org/abs/2211.15448). We also explore the potential of [foundation models for scientific discovery](https://arxiv.org/abs/2401.00096).

**Technical Contributions:**
Our group has a strong track record of developing widely-used scientific software. Notable examples include:
*   [**PolyChord**](https://arxiv.org/abs/1506.00171): A next-generation nested sampling algorithm for Bayesian computation.
*   [**anesthetic**](https://arxiv.org/abs/1905.04768): A Python package for processing and visualizing nested sampling runs.
*   [**GLOBALEMU**](https://arxiv.org/abs/2104.04336): An emulator for the sky-averaged 21-cm signal.
*   [**maxsmooth**](https://arxiv.org/abs/2007.14970): A tool for rapid maximally smooth function fitting.
*   [**margarine**](https://arxiv.org/abs/2205.12841): For marginal Bayesian statistics using normalizing flows and KDEs.
*   [**fgivenx**](https://arxiv.org/abs/1908.01711): A package for functional posterior plotting.
*   [**nestcheck**](https://arxiv.org/abs/1804.06406): Diagnostic tests for nested sampling calculations.

### Impact and Discoveries
Our research has led to significant advancements in cosmological data analysis and yielded new insights into the Universe. Key achievements include:
*   Pioneering the development and application of advanced Bayesian inference tools, such as [PolyChord](https://arxiv.org/abs/1506.00171), which has become a cornerstone for cosmological parameter estimation and model comparison globally.
*   Making significant contributions to the analysis of major cosmological datasets, including the [Planck mission](https://arxiv.org/abs/1807.06209), providing some of the tightest constraints on cosmological parameters and models of [inflation](https://arxiv.org/abs/1807.06211).
*   Developing novel AI-driven approaches for astrophysical challenges, such as using [machine learning for radiometer calibration in 21-cm experiments](https://arxiv.org/abs/2504.16791) and [simulation-based inference for extracting cosmological information from galaxy clusters](https://arxiv.org/abs/2504.10230).
*   Probing the nature of dark energy through innovative [non-parametric reconstructions of its equation of state](https://arxiv.org/abs/2503.08658) from combined datasets.
*   Advancing our understanding of the early Universe through detailed studies of [21-cm signals from the Cosmic Dawn and Epoch of Reionization](https://arxiv.org/abs/2301.03298), including the development of sophisticated foreground modelling techniques and emulators like [GLOBALEMU](https://arxiv.org/abs/2104.04336).
*   Developing new statistical methods for quantifying tensions between cosmological datasets ([Quantifying tensions in cosmological parameters: Interpreting the DES evidence ratio](https://arxiv.org/abs/1902.04029)) and for robust Bayesian model selection ([Bayesian model selection without evidences: application to the dark energy equation-of-state](https://arxiv.org/abs/1506.09024)).
*   Exploring fundamental physics questions such as potential [parity violation in the Large-Scale Structure using machine learning](https://arxiv.org/abs/2410.16030).

### Charting the Future: AI-Powered Cosmological Discovery
The Handley Research Group is poised to lead a new era of cosmological analysis, driven by the explosive growth in data from next-generation observatories and transformative advances in artificial intelligence. Our future ambitions are centred on harnessing these capabilities to address the most pressing questions in fundamental physics.

**Strategic Research Pillars:**
*   **Next-Generation Simulation-Based Inference (SBI):** We are developing advanced SBI frameworks to move beyond traditional likelihood-based analyses. This involves creating sophisticated codes for simulating [Cosmic Microwave Background (CMB)](https://arxiv.org/abs/1908.00906) and [Baryon Acoustic Oscillation (BAO)](https://arxiv.org/abs/1607.00270) datasets from surveys like DESI and 4MOST, incorporating realistic astrophysical effects and systematic uncertainties. Our AI initiatives in this area focus on developing and implementing cutting-edge SBI algorithms, particularly [neural ratio estimation (NRE) methods](https://arxiv.org/abs/2407.15478), to enable robust and scalable inference from these complex simulations.
*   **Probing Fundamental Physics:** Our enhanced analytical toolkit will be deployed to test the standard cosmological model ($\Lambda$CDM) with unprecedented precision and to explore [extensions to Einstein's General Relativity](https://arxiv.org/abs/2006.03581). We aim to constrain a wide range of theoretical models, from modified gravity to the nature of [dark matter](https://arxiv.org/abs/2106.02056) and [dark energy](https://arxiv.org/abs/1701.08165). This includes leveraging data from upcoming [gravitational wave observatories](https://arxiv.org/abs/1803.10210) like LISA, alongside CMB and large-scale structure surveys from facilities such as Euclid and JWST.
*   **Synergies with Particle Physics:** We will continue to strengthen the connection between cosmology and particle physics by expanding the [GAMBIT framework](https://arxiv.org/abs/2009.03286) to interface with our new SBI tools. This will facilitate joint analyses of cosmological and particle physics data, providing a holistic approach to understanding the Universe's fundamental constituents.
*   **AI-Driven Theoretical Exploration:** We are pioneering the use of AI, including [large language models and symbolic computation](https://arxiv.org/abs/2401.00096), to automate and accelerate the process of theoretical model building and testing. This innovative approach will allow us to explore a broader landscape of physical theories and derive new constraints from diverse astrophysical datasets, such as those from GAIA.

Our overarching goal is to remain at the forefront of scientific discovery by integrating the latest AI advancements into every stage of our research, from theoretical modeling to data analysis and interpretation. We are excited by the prospect of using these powerful new tools to unlock the secrets of the cosmos.
<!-- END OF WEBSITE SUMMARY -->

Content generated by [gemini-2.5-pro-preview-05-06](https://deepmind.google/technologies/gemini/) using [this prompt](/prompts/content/index.txt).

Image generated by [imagen-3.0-generate-002](https://deepmind.google/technologies/gemini/) using [this prompt](/prompts/images/index.txt).
```

2. **Paper Metadata:**
```yaml
!!python/object/new:feedparser.util.FeedParserDict
dictitems:
  id: http://arxiv.org/abs/2409.18464v2
  guidislink: true
  link: http://arxiv.org/abs/2409.18464v2
  updated: '2024-11-25T03:10:24Z'
  updated_parsed: !!python/object/apply:time.struct_time
  - !!python/tuple
    - 2024
    - 11
    - 25
    - 3
    - 10
    - 24
    - 0
    - 330
    - 0
  - tm_zone: null
    tm_gmtoff: null
  published: '2024-09-27T05:57:48Z'
  published_parsed: !!python/object/apply:time.struct_time
  - !!python/tuple
    - 2024
    - 9
    - 27
    - 5
    - 57
    - 48
    - 4
    - 271
    - 0
  - tm_zone: null
    tm_gmtoff: null
  title: "A comparison of Bayesian sampling algorithms for high-dimensional\n  particle\
    \ physics and cosmology applications"
  title_detail: !!python/object/new:feedparser.util.FeedParserDict
    dictitems:
      type: text/plain
      language: null
      base: ''
      value: "A comparison of Bayesian sampling algorithms for high-dimensional\n\
        \  particle physics and cosmology applications"
  summary: 'For several decades now, Bayesian inference techniques have been applied
    to

    theories of particle physics, cosmology and astrophysics to obtain the

    probability density functions of their free parameters. In this study, we

    review and compare a wide range of Markov Chain Monte Carlo (MCMC) and nested

    sampling techniques to determine their relative efficacy on functions that

    resemble those encountered most frequently in the particle astrophysics

    literature. Our first series of tests explores a series of high-dimensional

    analytic test functions that exemplify particular challenges, for example

    highly multimodal posteriors or posteriors with curving degeneracies. We then

    investigate two real physics examples, the first being a global fit of the

    $\Lambda$CDM model using cosmic microwave background data from the Planck

    experiment, and the second being a global fit of the Minimal Supersymmetric

    Standard Model using a wide variety of collider and astrophysics data. We show

    that several examples widely thought to be most easily solved using nested

    sampling approaches can in fact be more efficiently solved using modern MCMC

    algorithms, but the details of the implementation matter. Furthermore, we also

    provide a series of useful insights for practitioners of particle astrophysics

    and cosmology.'
  summary_detail: !!python/object/new:feedparser.util.FeedParserDict
    dictitems:
      type: text/plain
      language: null
      base: ''
      value: 'For several decades now, Bayesian inference techniques have been applied
        to

        theories of particle physics, cosmology and astrophysics to obtain the

        probability density functions of their free parameters. In this study, we

        review and compare a wide range of Markov Chain Monte Carlo (MCMC) and nested

        sampling techniques to determine their relative efficacy on functions that

        resemble those encountered most frequently in the particle astrophysics

        literature. Our first series of tests explores a series of high-dimensional

        analytic test functions that exemplify particular challenges, for example

        highly multimodal posteriors or posteriors with curving degeneracies. We then

        investigate two real physics examples, the first being a global fit of the

        $\Lambda$CDM model using cosmic microwave background data from the Planck

        experiment, and the second being a global fit of the Minimal Supersymmetric

        Standard Model using a wide variety of collider and astrophysics data. We
        show

        that several examples widely thought to be most easily solved using nested

        sampling approaches can in fact be more efficiently solved using modern MCMC

        algorithms, but the details of the implementation matter. Furthermore, we
        also

        provide a series of useful insights for practitioners of particle astrophysics

        and cosmology.'
  authors:
  - !!python/object/new:feedparser.util.FeedParserDict
    dictitems:
      name: Joshua Albert
  - !!python/object/new:feedparser.util.FeedParserDict
    dictitems:
      name: Csaba Balazs
  - !!python/object/new:feedparser.util.FeedParserDict
    dictitems:
      name: Andrew Fowlie
  - !!python/object/new:feedparser.util.FeedParserDict
    dictitems:
      name: Will Handley
  - !!python/object/new:feedparser.util.FeedParserDict
    dictitems:
      name: Nicholas Hunt-Smith
  - !!python/object/new:feedparser.util.FeedParserDict
    dictitems:
      name: Roberto Ruiz de Austri
  - !!python/object/new:feedparser.util.FeedParserDict
    dictitems:
      name: Martin White
  author_detail: !!python/object/new:feedparser.util.FeedParserDict
    dictitems:
      name: Martin White
  author: Martin White
  arxiv_comment: 45 pages, 8 figures, 20 tables
  links:
  - !!python/object/new:feedparser.util.FeedParserDict
    dictitems:
      href: http://arxiv.org/abs/2409.18464v2
      rel: alternate
      type: text/html
  - !!python/object/new:feedparser.util.FeedParserDict
    dictitems:
      title: pdf
      href: http://arxiv.org/pdf/2409.18464v2
      rel: related
      type: application/pdf
  arxiv_primary_category:
    term: hep-ph
    scheme: http://arxiv.org/schemas/atom
  tags:
  - !!python/object/new:feedparser.util.FeedParserDict
    dictitems:
      term: hep-ph
      scheme: http://arxiv.org/schemas/atom
      label: null
  - !!python/object/new:feedparser.util.FeedParserDict
    dictitems:
      term: stat.ML
      scheme: http://arxiv.org/schemas/atom
      label: null

```

3. **Paper Source (TeX):**
```tex
\RequirePackage{ifpdf}
\documentclass[11pt]{article}

\usepackage{jheppub}
\usepackage{multicol}
\usepackage{graphicx}
\usepackage{amsmath}
\usepackage{url}
\usepackage{multirow}
\usepackage{rotating}
\usepackage{afterpage}
\usepackage{lmodern}
\usepackage[T1]{fontenc}

\usepackage{pdflscape}
\usepackage[table]{xcolor}
\usepackage{caption}
\usepackage{subcaption}
\usepackage{aas_macros}
\usepackage{jdefs}
\usepackage{bm}
\usepackage{ragged2e}
\usepackage{changepage}
\usepackage{booktabs}
\usepackage{cleveref}
\usepackage{xspace}
\usepackage{bm}

\definecolor{row-highlight}{rgb}{0.97, 0.51, 0.47}
\newcommand{\code}{\texttt}

% statistics macros
\newcommand{\neff}{\ensuremath{n_\text{eff}}}
\newcommand{\nlike}{\ensuremath{n_\mathcal{L}}}
\renewcommand{\vec}{\bm}
\newcommand{\given}{\,|\,}

% mcmc macros
\newcommand{\rhat}{\ensuremath{\hat R}\xspace}
\newcommand{\nwalkers}{\ensuremath{n_\text{w}}}

% nested sampling macros
\newcommand{\nlive}{\ensuremath{n_\text{live}}}

\newcommand{\bob}[1]{{\color{red} #1}}
\newcommand{\rruiz}[1]{{\color{purple} #1}}
\newcommand{\af}[1]{\textcolor{blue}{\textit{AF: #1}}}
\newcommand{\CsB}[1]{{\color{teal} CsB: #1}}


\newcommand{\adelaide}{ARC Centre for Dark Matter Particle Physics, Department of Physics, University of Adelaide, Adelaide, SA 5005, Australia}
\newcommand{\ucla}{Physics and Astronomy Department, University of California, Los Angeles, CA 90095, USA}
\newcommand{\nanjing}{Department of Physics and Institute of Theoretical Physics, Nanjing Normal University, Nanjing, Jiangsu 210023, China}
\newcommand{\xjtlu}{Department of Physics, School of Mathematics and Physics, Xi'an Jiaotong-Liverpool University, Suzhou, 215123, China}
\newcommand{\bom}{Bureau of Meteorology, Melbourne, VIC 3001, Australia}
\newcommand{\monash}{School of Physics and Astronomy, Monash University, Melbourne, VIC 3800, Australia}
\newcommand{\uq}{School of Mathematics and Physics, The University of Queensland, St.\ Lucia, Brisbane, QLD 4072, Australia}
\newcommand{\cambridge}{Cavendish Laboratory, University of Cambridge, JJ Thomson Avenue, Cambridge, CB3 0HE, UK}
\newcommand{\kicc}{Kavli Institute for Cosmology, Madingley Road, Cambridge, CB3 0HA, UK}
\newcommand{\uam}{Higher Polytechnic School, Universidad Autonoma de Madrid, Francisco Tomas y Valiente 25, Madrid, Spain}
\newcommand{\imapp}{High Energy Physics, IMAPP, Radboud University Nijmegen, Heyendaalseweg 135, 6525 AJ, Nijmegen, Netherlands}
\newcommand{\nikhef}{Nikhef, Science Park 105, 1098 XG Amsterdam, Netherlands}
\newcommand{\uniiceland}{Science Institute, University of Iceland, Dunhaga 7, IS-107 Reykjavik, Iceland}
\newcommand{\nordita}{Nordita, KTH Royal Institute of Technology and Stockholm University, Roslagstullsbacken 23, SE-106 91 Stockholm, Sweden}
\newcommand{\ific}{Instituto de F\'isica Corpuscular, IFIC-UV/CSIC, Carrer del CatedrÃ¡tic JosÃ© BeltrÃ¡n Martinez, 2, Valencia, Spain}
\newcommand{\csicuv}{Consejo Superior de Investigaciones CientÃ­ficas (CSIC) - Universidad de Valencia (UV), Valencia, Spain}
\newcommand{\eindhoven}{Eindhoven University of Technology, Groene Loper 5, 5612 AZ Eindhoven, Netherlands}
\newcommand{\ox}{Rudolf Peierls Centre for Theoretical Physics, 20 Parks Road, Oxford OX1 3PU, United Kingdom}
\newcommand{\imperial}{Department of Physics, Imperial College London, Blackett Laboratory, Prince Consort Road, London SW7 2AZ, UK}
\newcommand{\grappa}{Gravitation Astroparticle Physics Amsterdam (GRAPPA), Institute for Theoretical Physics Amsterdam and Delta Institute for Theoretical Physics, University of Amsterdam, Science Park 904, 1098 XH Amsterdam, The Netherlands}
\newcommand{\caltech}{Cahill Center for Astronomy and Astrophysics, California Institute of Technology, Pasadena, CA 91125, USA}
\newcommand{\leiden}{Leiden Observatory, Leiden University, PO Box 9513, 2300 Leiden, The Netherlands}

\newcommand{\abc}{\textsf{Artificial Bee Colony}\xspace}
\newcommand{\ampgo}{\textsf{AMPGO}\xspace}
\newcommand{\ampgofull}{\textsf{Adaptive Memory Programming for Global Optimisation}\xspace}
\newcommand{\bo}{\textsf{Bayesian Optimisation}\xspace}
\newcommand{\cmaes}{\textsf{CMA-ES}\xspace}
\newcommand{\cmaesfull}{\textsf{Covariance Matrix Adaptation Evolution Strategy}\xspace}
\newcommand{\de}{\textsf{Differential Evolution}\xspace}
\newcommand{\diver}{\textsf{Diver}\xspace}
\newcommand{\gambit}{\textsf{GAMBIT}\xspace}
\newcommand{\GB}{\gambit}
\newcommand{\github}{\textsf{GitHub}\xspace}
\newcommand{\gpbo}{\textsf{Gaussian Process-based Bayesian Optimisation}\xspace}
\newcommand{\gpyopt}{\textsf{GPyOpt}\xspace}
\newcommand{\gwo}{\textsf{Grey Wolf Optimisation}\xspace}
\newcommand{\hds}{\textsf{HDS}\xspace}
\newcommand{\hdsfull}{\textsf{High-Dimensional Sampling}\xspace}
\newcommand{\ide}{\textsf{iDE}\xspace}
\newcommand{\jde}{\textsf{jDE}\xspace}
\newcommand{\lambdajde}{\textsf{$\lambda$jDE}\xspace}
\newcommand{\particlefilter}{\textsf{Gaussian Particle Filter}\xspace}
\newcommand{\pso}{\textsf{Particle Swarm Optimisation}\xspace}
\newcommand{\pygmo}{\textsf{PyGMO}\xspace}
\newcommand{\pygmoabc}{\textsf{PyGMO Artificial Bee Colony}\xspace}
\newcommand{\pygmode}{\textsf{PyGMO Differential Evolution}\xspace}
\newcommand{\pygmogwo}{\textsf{PyGMO Grey Wolf Optimisation}\xspace}
\newcommand{\pyscannerbit}{\textsf{pyScannerBit}\xspace}
%\newcommand{\randomsampling}{\textsf{Random Sampling}\xspace}
\newcommand{\randomsampling}{random sampling\xspace}
\newcommand{\scannerbit}{\textsf{ScannerBit}\xspace}
\newcommand{\trustregionbo}{\textsf{Trust Region Bayesian Optimisation}\xspace}
\newcommand{\turbo}{\textsf{TuRBO}\xspace}
\newcommand{\turbofull}{\textsf{Trust Region Bayesian Optimisation}\xspace}

%% %%%%%%%%% Graphics macros %%%%%%%%%%%%%%
 \newlength{\wth}
 \setlength{\wth}{2.6in}

\newcommand{\twographst}[2]{%
 \unitlength=1.1in
 \begin{picture}(5.8,2.6)(-0.15,0)
 \put(0,0){\epsfig{file=#1, width=\wth}}
 \put(2.7,0){\epsfig{file=#2, width=\wth}}
 \end{picture}
}


\title{A comparison of Bayesian sampling algorithms for high-dimensional particle physics and cosmology applications}

\abstract{For several decades now, Bayesian inference techniques have been applied to theories of particle physics, cosmology and astrophysics to obtain the probability density functions of their free parameters. In this study, we review and compare a wide range of Markov Chain Monte Carlo (MCMC) and nested sampling techniques to determine their relative efficacy on functions that resemble those encountered most frequently in the particle astrophysics literature. Our first series of tests explores a series of high-dimensional analytic test functions that exemplify particular challenges, for example highly multimodal posteriors or posteriors with curving degeneracies. We then investigate two real physics examples, the first being a global fit of the $\Lambda$CDM model using cosmic microwave background data from the Planck experiment, and the second being a global fit of the Minimal Supersymmetric Standard Model using a wide variety of collider and astrophysics data. We show that several examples widely thought to be most easily solved using nested sampling approaches can in fact be more efficiently solved using modern MCMC algorithms, but the details of the implementation matter. Furthermore, we also provide a series of useful insights for practitioners of particle astrophysics and cosmology.}

\collaboration{The DarkMachines High Dimensional Sampling Group}  % jhep style
\author[1, 2]{Joshua Albert}
\author[3]{Csaba~Bal\'azs,}
\author[4]{Andrew Fowlie,}
\author[5,6]{Will Handley,}
\author[7]{Nicholas Hunt-Smith,}
\author[8]{Roberto Ruiz de Austri,}
\author[7]{Martin~White}  % changed to jhep style

\affiliation[1]{\caltech}
\affiliation[2]{\leiden}
\affiliation[3]{\monash}
\affiliation[4]{\xjtlu}
\affiliation[5]{\cambridge}
\affiliation[6]{\kicc}
\affiliation[7]{\adelaide}
\affiliation[8]{\ific}



\emailAdd{martin.white@adelaide.edu.au}
\emailAdd{nicholas.hunt-smith@adelaide.edu.au}


\begin{document}

\maketitle

\keywords{Parameter Sampling, Dark Matter}

\section{Introduction}

Global fitting is an essential tool across physics, allowing us to combine all relevant experimental data and learn the unknown parameters of a physics model~\cite{AbdusSalam:2020rdj,gambit,hepfit,MasterCodemSUGRA,NuFIT}.
The range of applications includes cosmology~\cite{2110.11421, 2002.11406}, astrophysics~\cite{2002.11406, Chang:2022jgo, Chang:2023cki, GAMBIT:2021rlp}, and nuclear and particle physics.  In the latter field global fits are used in quantum chromodynamics~\cite{2302.12124, 2206.12465, 2201.06586, 2106.06390}, neutrino physics~\cite{2111.03086, 2007.14792, 2007.08526, 2003.08511}, effective field theories~\cite{2207.10088, 2103.14022, 2012.02779, 2003.05432}, and in beyond the Standard Model phenomenology~\cite{2210.16337, 2207.05103, 2202.11753, 2101.07811, 2012.02799, 2007.02985}.  

There are two dominant approaches to global fitting that are widely used across all sciences: frequentist and Bayesian inference. The latter is particularly prevalent in particle astrophysics, astrophysics and cosmology, and common in particle physics.  
In particle physics, Bayesian inference is widely used for example in non-perturbative quantum chromodynamics studies, such as fits of parton distribution functions and fragmentation functions~\cite{2201.07240, DelDebbio:2021whr, HERAFitterdevelopersTeam:2015cre}, extraction of signs of physics beyond the Standard Model~\cite{2112.07274, 2104.07680, 2101.00428, Anisha:2020ggj, 2008.01113}, analysis of effective field theories~\cite{Anisha:2020ggj, Kowalska_2019, hepfit}, and the determination of the parameters of the neutrino sector~\cite{2006.11237, DellOro:2019pqi, NuFit15}.
%
In particle astrophysics, applications range from neutrino astronomy~\cite{Bose:2012qh, Romero-Wolf:2017xqe, Capel:2020txc}, through to cosmic ray studies~\cite{Fowlie:2017fya}, dark matter searches and phenomenology~\cite{SSDM, SSDM2, Athron:2018hpc, Liem:2016xpm}, gravitational wave astronomy~\cite{Ashton:2021anp, BilbyMCMCGuide, Ashton:2018jfp}, and global fits and model comparison~\cite{Athron:2017ard,hepfit,Buchmueller:2007zk, NuFit15}.
%
In astrophysics and cosmology, Bayesian tools are used in the extraction of cosmological or particle astrophysics parameters and gravitational wave studies~\cite{2111.13083, Hergt:2021qlh, 2101.11882, 2001.05393, 2002.04035}.

In a previous work, we surveyed algorithms and codes for optimisation, which is more relevant for frequentist inference~\cite{DarkMachinesHighDimensionalSamplingGroup:2021wkt}. We compared a variety of different techniques on analytic test functions and real physics examples to determine which approaches were the best starting point for problems in particle physics, astrophysics and cosmology. The purpose of this work is to perform an analogous study for Bayesian inference techniques which, as a rule, are the most popular choice in cosmology whilst also having a wide utility in particle physics global fits. There is a significant literature of sampling algorithms for Bayesian inference, with new algorithms being provided at a steady rate. For users in the field, it is not easy to determine which technique to use for a given problem, despite the choice having major implications for the accuracy of the final results and the efficiency with which they are obtained. In the following review, we therefore compare and contrast a wide selection of Markov chain Monte Carlo and nested sampling techniques on analytic test functions and real physics examples, in order to see which approaches work best for which problems. This allows users with physical insight on the expected shape of their posterior to select the most promising technique. Throughout, we aim to compare techniques from the position of the typical user --- we do not therefore perform extensive optimisation of the hyperparameters of different algorithms, but instead stick close to default settings in order to compare their relative efficacy under reasonable test conditions.

In the Bayesian statistical framework (see e.g.,~\cite{Jeffreys:1939xee,d2003bayesian,sivia2006data} for an introduction), we begin with an observed set of data $\vec{D}$ that we wish to describe using a model that depends on some unknown parameters $\vec{\theta}$. Bayesian inference proceeds by updating a chosen prior distribution of the parameters $p(\vec{\theta})$ to a posterior distribution given the data $p(\vec{\theta}\given\vec{D})$, through application of Bayes' theorem:
\begin{equation}\label{eq:bayes}
  p(\vec{\theta}\given\vec{D})=\frac{\mathcal{L}(\vec{D}\given\vec{\theta}) \, p(\vec{\theta})}{p(\vec{D})}.
\end{equation}
Here $\mathcal{L}(\vec{D}\given\vec{\theta})$ is the likelihood function (the probability of the data given the parameter point $\vec{\theta}$) and $p(\vec{D})$ is the Bayesian evidence, which ensures that the left-hand side is normalised, as expected for a probability density function. 

In many cases, including those explored in this paper, the unnormalised posterior (or equivalently the joint distribution) $\mathcal{L}(\vec{D}\given\vec{\theta}) \, p(\vec{\theta})$ is available analytically and tractable (though there are situations in which this may not be the case~\cite{Andrieu_2009}) but the evidence $p(\vec{D})$ is not readily available. We wish to learn about one or more of the parameters through the posterior or through moments and quantiles of parameters with respect to the posterior. This becomes computationally challenging as the number of parameters grows and for multi-modal posteriors, that is, cases in which there the posterior contains more than one mode. The challenge lies in integrating the posterior with respect to model parameters; e.g., the marginal posterior,
\begin{equation}\label{eq:marginal}
    p(\theta_1 \given \vec{D}) = \int p(\vec{\theta} \given \vec{D}) \, \text{d}\theta_2 \text{d}\theta_3 \ldots \text{d}\theta_n,
\end{equation}
or the expectation,
\begin{equation}\label{eq:expectation}
    \langle g \rangle = \int g(\vec \theta) \, p(\vec{\theta} \given \vec{D}) \, \text{d}\theta_1 \text{d}\theta_2 \text{d}\theta_3 \ldots \text{d}\theta_n,
\end{equation}
despite the unavailability of the evidence in \cref{eq:bayes}.
This has spurred the creation of numerous algorithms aimed at rendering these computations more feasible.


Our paper is structured as follows. In \cref{sec:algorithms}, we provide a description of each of the algorithms we use in our study. In \cref{sec:methodology} we explain the metrics that we use to compare them, and in \cref{sec:results} we describe the examples that we use for our comparisons and detail the results.  Finally, we present conclusions in \cref{sec:conclusions}.
The appendices include supplementary materials related to the metrics we have used, as well as posterior means and standard deviations for the test functions.

\section{Sampling algorithms}\label{sec:algorithms}

Due to their current dominance in particle astrophysics and cosmology applications, we consider variants of two classes of Monte Carlo (MC) algorithms to draw samples from the posterior $\{\vec{\theta}_{i}\sim p(\cdot|\vec{D}):i=1,\ldots, n\}$: Markov chain Monte Carlo (see e.g.,~\cite{Sharma:2017wfu,Hogg:2017akh} for introductions in the context of physics) and nested sampling (NS;~\cite{Skilling04,skilling2006,Ashton:2022grj,Buchner_2023}). The samples facilitate parameter inference through estimates of the integrals in \cref{eq:marginal,eq:expectation}. Marginals may be estimated with histograms and expectations may be estimated through averages,
\begin{equation}
    \bar g = \frac1n \sum_{i=1}^n g(\vec{\theta}_{i}),
\end{equation}
however, in practice most algorithms (including NS) generate weighted samples, for which expectations are estimated through weighted averages,
\begin{equation}
\bar g = \frac{\sum_{i=1}^n  g(\vec{\theta}_{i}) w_i}{\sum_{i=1}^n w_i},
\end{equation}
where $w_i$ are the sampling weights.

Whilst  both MCMC and NS allow for parameter inference, their goals and thus their performance characteristics are somewhat different. NS was designed to allow one to make statistical estimates of compression, which appears in Bayesian model selection through the Bayesian evidence and in frequentist computation~\cite{Fowlie:2021gmr}. MCMC, on the other hand, allows for parameter inference without ever estimating compression. Computing compression ratios is fundamentally more computationally challenging, so it is generally accepted that NS algorithms command a higher computational cost.

MCMC runs are typically divided into two parts: a warm-up phase, that reduces bias, and a sampling phase, that eliminates noise~\cite{2023arXiv231102726M}. In the sampling phase, new posterior samples can be continually generated at a fixed computational cost. NS runs, on the other hand, compress from the prior to the bulk of the posterior mass and beyond. Consequently, new posterior samples cannot be generated at a fixed computational cost by running NS for longer and incomplete runs are of limited value, suffering from both bias (a truncation error) and noise. New NS runs, on the other hand, would waste computational effort compressing to the bulk of the posterior mass. Dynamic NS~\cite{2019S&C....29..891H} solves this problem by rewinding a completed NS run back to the bulk of the posterior mass and starting an independent run from that point. This amortizes the cost of compressing to the bulk of the posterior.

It should be noted therefore that NS algorithms are generally understood to be considerably more expensive than MCMC algorithms as a method for generating posterior samples, and that very little will beat a well-tuned MCMC. This is because NS algorithms are designed to compute the evidence, which requires compressing from prior through posterior and onto the peak of the likelihood. MCMC algorithms on the other hand cannot compute the evidence alone~(as they do not estimate compression), although other methods exist to augment these such as \code{MCEvidence}~\cite{Heavens:2017afc}, \code{FloZ}~\cite{Srinivasan:2024uax} or \code{harmonic}~\cite{Polanska:2024arc}. In practice, NS is used as a posterior sampler when the problem is multimodal, which can cause challenges for MCMC algorithms. In this paper, we demonstrate that modern MCMC algorithms can now be effective on multimodal problems, bringing the efficiency of MCMC to bear on problems previously only NS could tackle.

Among our total list of algorithms are two significant variants to the MCMC and NS paradigms. First, we consider an adaptive MCMC algorithm~(see, e.g.,~\cite{andrieu2008tutorial}).
In this algorithm, a diffusion model proposal~\cite{Hunt-Smith:2023ccp} is continually tuned in both the warm-up and sampling phases, and thus the efficiency continually increases towards one over the course of a run. Consequently, new posterior samples can be generated at an ever-decreasing computational cost. Tuning during the sampling phase could, however, introduce bias. Second, we consider an importance sampling method, based on an NS sampling scheme.



\subsection{Markov chain Monte Carlo}

Markov chain Monte Carlo (MCMC) algorithms have been used for decades within cosmology (see e.g.,~\cite{Christensen:2001gj,Lewis:2002ah}) and particle physics (see e.g.,~\cite{Baltz:2004aw,RuizdeAustri:2006iwb}) to explore complex posteriors, and can still be considered the state of the art in some cases. 
%(e.g.~inferring the parameters of the $\Lambda$CDM cosmological model~\cite{EXAMPLE_MCMC_COSMO}{\bf TODO: missing reference?}). 
In MCMC, we sequentially draw a set of samples $\{\vec{X_i}\}$ from the unnormalised posterior distribution. One of the benefits of MCMC is that the normalisation constant, or Bayesian evidence, need not be known. While this is helpful for parameter inference, it hinders model comparisons, which are typically performed using the Bayesian evidence.

Each $\vec{X_i}$ is a $D$-dimensional vector of numbers that represent each of the parameters in our $D$-dimensional parameter space, and the drawing of samples is a \emph{stochastic process}. Such a process is said to have the \emph{Markov property} if the conditional probability distribution of future states of the process (conditional on both past and present states) is only dependent on the present state. Our sampling process will have the Markov property if the conditional probability of the next sample taking a certain value depends only on the present sample, and not on all the samples that preceded it. A Markov chain Monte Carlo algorithm, therefore, is an algorithm that builds this feature into the selection of the samples. Performant MCMC algorithms generally have an adaptive element to tackle \textit{a priori} unseen problems, which technically breaks this Markov property, although providing the adaptivity is slow compared to the sampling timescale (or if this tuning period is discarded) this is rarely a problem in practice.

One of the simplest MCMC algorithms is the \emph{Metropolis-Hastings Algorithm}, which we'll use as an illustrative example. First, assume that we are at a point in the parameter space where the parameter values lie within the range of the prior. We will label this as the $t$-th point in the chain, with a parameter vector $\vec{X^{(t)}}$. We then define and use a \emph{proposal density} $Q(\vec{X'};\vec{X^{(t)}})$ to obtain a new sample $\vec{X'}$. As expected, this depends only on the current state of the system. It can be any fixed density, with support encompassing the posterior distribution support, from which it is possible to draw samples; in particular, it is not necessary for $Q(\vec{X'};\vec{X^{(t)}})$ to resemble the posterior that we are sampling in order to be useful. It is common to choose a simple, easily-sampled distribution, such as a multidimensional Gaussian.

We then choose whether to accept the new sample $\vec{X'}$ based on its acceptance ratio:
\begin{equation}
  \label{eq:metropolis}
a_{\vec{X'}}=\frac{p^*(\vec{X'}\given\vec{D})Q(\vec{X^{(t)}}\given\vec{X'})}{p^*(\vec{X^{(t)}}\given\vec{D})Q(\vec{X'};\vec{X^{(t)}})},
\end{equation}
where $p^*(\vec{X_i}\given\vec{D})$ is the unnormalised posterior for the parameter choice $\vec{X_i}$. If $a_{\vec{X'}} \ge 1$ the new state is accepted, otherwise we draw an i.i.d. random number $\mathcal{U}[0,1]$, and accept the proposed state if it is less than $a_{\vec{X'}}$. If we accept the new sample, it becomes the next point in our Markov chain. Otherwise, we stay at the current point and draw another proposal. Note, if $Q$ is a symmetric function of $\vec{X^{(t)}}$ and $\vec{X'}$, then the ratio of $Q$ factors disappears from $a_{\vec{X'}}$, and the Metropolis-Hastings method reduces to the Metropolis method, which involves a simple comparison of the posterior at the two candidate points in the Markov chain.

It can be shown that the probability distribution of the collection of accepted proposals $\{\vec{X^{(n)}}:n=1..t\}$ tends to the posterior distribution as $t\to \infty$, provided that $Q$ is chosen such that $Q(\vec{X'};\vec{X})>0$ for all $\vec{X},\vec{X'}$. Thus, by choosing points via the Metropolis-Hastings algorithm, we obtain samples from the unnormalised posterior.

Note that the presence of the caveat $t \to \infty$ implies that there is an issue of convergence in the application of the Metropolis algorithm, and this is to be expected from the Markov Chain nature of the method. Each element in the sequence $\vec{X^{(t)}}$ has a probability distribution that is dependent on the previous value $\vec{X^{(t-1)}}$ and hence, since successive samples are correlated with each other, the Markov Chain must be run for a certain length of time in order to generate samples that are effectively independent. The exact details of convergence depend on the particular posterior being sampled, and on the details of $Q$, and hence there is some element of tuning involved in getting the algorithm to run efficiently. 

The purpose of the definition in \cref{eq:metropolis} is to ensure that the Markov Chain used in the Metropolis method is reversible. By this it is meant that the chain satisfies the principle of detailed balance, i.e.~that the probability $T(\vec{X^a} ; \vec{X^b})$ of the chain making a transition from a state $\vec{X^a}$ to a state $\vec{X^b}$ is related to the reverse transition via $T(\vec{X^a}; \vec{X^b})P(\vec{X^a}) = T(\vec{X^b};\vec{X^a})P(\vec{X^b})$. This property is fundamental to how Metropolis sampling ensures convergence to the posterior.

For all MCMC algorithms, we must choose a point at which to start. Ideally, we would start from a draw from the target, though if we could draw from the target, we wouldn't be running MCMC in the first place. A common technique for choosing a starting point is burn-in or warmup. Here, one makes a preliminary choice of starting point and runs the chain for a number of `burn-in' iterations. The states of the chain in this period are discarded, and the position of the chain at the end of burn-in is used as the starting point. Other possibilities include draws from the prior and the mode of the target.

For a fair comparison of the MCMC techniques used in this paper, we use a common set of starting points for all MCMC chains and the same length of burn-in. 

\subsubsection{List of MCMC algorithms}

The efficiency of an MCMC sampler depends on the auto-correlation time of its chain, which can be reduced by a well-chosen proposal distribution. Thus, the key to an efficient MCMC implementation lies in constructing proposals judiciously. We consider the following MCMC codes:
 \begin{itemize}
     \item \verb|emcee|~\cite{2013PASP..125..306F,2019JOSS....4.1864F}: affine-invariant proposals are constructed from an ensemble of chains~\cite{2010CAMCS...5...65G}. The affine-invariance makes the algorithm self-tuning and amenable to problems with degeneracies and anisotropies.
     
     \item \verb|ptemcee|~\cite{2016MNRAS.455.1919V}: builds upon \verb|emcee| by parallel tempering among several ensembles of chains~\cite{PhysRevLett.57.2607,geyer1994estimating,2005PCCP....7.3910E}. Tempering involves raising the likelihood $\mathcal{L}^\beta$ to the power of a ``temperature'' $\beta$, in analogy with the Boltzmann factor where $\log\mathcal{L}$ plays the part of the energy, with ``hot'' being $\beta\to0$ and ``cold'' where $\beta\to 1$. An ensemble of cold chains targets the original posterior and ensembles of warm chains target tempered versions of the posterior. The tempered posteriors are more amenable to MCMC because modes are somewhat flattened. A special move swaps states between cold and warm chains. Consequently, the cold chains mix more quickly between modes. Whilst this can help in multimodal problems, abrupt changes in the tempered posterior as we change temperature (phase transitions) could cause problems. 
     
     \item \verb|zeus|~\cite{Karamanis:2021tsx}: an ensemble slice sampler~\cite{Neal2003,Karamanis:2020zss}. Proposals are based on slices of the posterior, potentially leading to big steps and thus small auto-correlation. Anisotropic and multimodal problems are tackled using the ensemble paradigm: affine-invariant slices are constructed from an ensemble of walkers and moves between modes are enabled by slices from one mode to another.
     
     \item \verb|MCMC-diffusion|~\cite{Hunt-Smith:2023ccp}: a mixture of local MH moves and global moves from a diffusion model trained on previous states of the chain. 
 \end{itemize}
See Table~\ref{tab:walkers} for a list of the number of walkers used for each test problem. We checked that the number of walkers chosen for each algorithm corresponded to the best available results given the computational constraints for each problem.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Nested Sampling}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Nested sampling (NS) was introduced by John Skilling~\cite{skilling2006} as a general method of Lebesgue integration, with the main aim of efficiently evaluating Bayesian evidence,
\begin{equation}
Z = \int_\Sigma \mathcal{L}(\vec\theta) \, p(\vec\theta) \,\mathrm{d} \theta.  \label{eq:Z}
\end{equation}
A naive approach to evaluating \cref{eq:Z} using standard quadrature quickly fails as the dimension of $\vec\theta$ grows, as well as when much of the likelihood is contained in small regions of the prior volume.
Both properties are typical of most physical modelling problems. Simulated-annealing MC methods offer an alternative approach to evaluation of the Bayesian evidence~\cite{albert2015simulated}; however, as was shown in~\cite{skilling2006}, simulated annealing is fundamentally unable to handle likelihoods with phase transitions, which are also commonplace in physical models.

We will now briefly describe the basic NS algorithm, which is, at its core, a compression algorithm. 
Given any particular likelihood value, $\lambda$, it is possible to define a corresponding prior volume, $X(\lambda)$, such that $X(\lambda) = \int_{\mathcal{L}(\theta) > \lambda} p(\theta) d\theta$. The essence of NS is to transform the multidimensional integral of \cref{eq:Z} into a one-dimensional integral over $X$,
\begin{align}
    Z = \int \mathcal{L}(X) \,\mathrm{d} X.  \label{eq:Z_X}
\end{align}
This transformation simplifies the problem significantly, as it reduces the dependence on the dimensionality of $\theta$.

This transformation changes the problem into estimating how much prior volume, $X(\lambda)$ to place at each iso-likelihood contour, $\lambda$, resulting in a so-called shrinkage process of estimation.
The algorithm starts at $X(\lambda_0 \triangleq 0) \triangleq 1$, where we have precise knowledge of the amount of enclosed prior volume, and marches inwards to higher likelihood values.
A set of $\nlive$ samples are uniformly drawn from the likelihood constrained prior distribution, $\{\theta_n : n=1\ldots\nlive, \mathcal{L}(\theta_n) > \lambda_0\}$. This set is called the set of `live points'.
The sample among the live points with the lowest likelihood value, $\lambda_i$, is selected and replaced with a new sample uniformly drawn within the new likelihood $\lambda_i$. This procedure generates an ordered set of likelihood values, samples, and associated prior volumes, $\mathcal{S} = \{(\lambda_i, \theta_i, X_i): i=1..S\}$, which provide a means to estimate $Z$ via numerical integration,
\begin{align}
    Z \approx \sum_i \lambda_i \Delta X_i. \label{eq:Z_approx}
\end{align}
The key is that when selecting the lowest likelihood point from the live set, there is a known distribution for $X_i$.
By definition, it is given by the order statistic of the distribution of all $X$ in the live set.
Since we carefully ensure that each live point is \textit{uniformly} drawn from within the given likelihood contour, the order statistic is simply given by the Beta distribution.
The algorithm proceeds until an implementation-specific stopping criterion is met, usually based on an estimation of the remaining evidence in the live points.
Since its introduction there have been numerous explorations and improvements to the basic NS algorithm, but the core concept of compression remains in all variations~\cite{Ashton:2022grj,Buchner_2023}.

One of the key features of NS is its ability to explore complex, multi-modal distributions effectively. This is achieved through the use of the set of live points which allow the algorithm to sample from different modes of the distribution concurrently. This feature, combined with the reduction in dimensionality of the problem, makes NS particularly well-suited for Bayesian inference in high-dimensional spaces, where traditional methods like MCMC may struggle.
Furthermore, NS provides an elegant solution to the issue of phase transitions in likelihood surfaces. By athermally contracting the prior volume and sampling from the constrained space, NS adaptively focuses on regions of interest, seamlessly navigating across different phases of the likelihood landscape.

A by-product of the numerical integration performed by \cref{eq:Z_approx} is a means to compute the posterior distribution, or rather, samples from it.
By comparing \cref{eq:Z} with \cref{eq:Z_approx} we can see that the transformation to a one-dimensional enclosed prior volume implies that the set of samples $\mathcal{S}$ \textit{is} the posterior with a reweighting of the individual samples.
The relative weight of sample $i$ is given by,
\begin{align}
    w_i \triangleq \lambda_i \Delta X_i \label{eq:Z_weight}.
\end{align}
In both \cref{eq:Z_approx,eq:Z_weight} the $\Delta X_i$ are random variables due to the fact that the shrinkage process is a sampling procedure. Therefore, expectations are taken using the known properties of the order statistic distribution.
Using the above weights, $w_i$, it is then simple to resample the posterior to uniform weights and use the samples just as you would use samples from MCMC, which also produces uniformly weighted samples.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{List of NS algorithms}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

We compared several Nested Sampling (NS) algorithms implemented in \code{Bilby}~\cite{Ashton:2018jfp}, including \code{MultiNest}~\cite{0809.3437,1306.2144}, \code{PolyChord}~\cite{Handley:2015}, \code{Dynesty}~\cite{Speagle:2019ivv},  \code{UltraNest/MLFriends}~\cite{2016S&C....26..383B,2019PASP..131j8005B}, and \code{Nessai}~\cite{Williams:2023ppp}. We also integrated \code{JaxNS}~\cite{2020arXiv201215286A} and \code{Nautilus}~\cite{lange2023nautilus} into \code{Bilby}. Here is a summary of their methodologies and characteristics:

\begin{itemize}
    \item \textbf{\code{MultiNest}}: The original NS algorithm, using ellipsoidal rejection sampling to bound the likelihood contour. We used the Python interface provided by \code{PyMultiNest}.
    \item \textbf{\code{PolyChord}}: Utilizes 1D slice sampling and clustering analysis to handle separable posterior modes. We explored the default settings, focusing on its ability to step out in anisotropic problems and navigate multimodal distributions. We used the Python interface provided by \code{PyPolychord}.
    
    \item \textbf{\code{Dynesty}}: Offers a variety of rejection and step sampling methods, including dynamic NS. We used the default sampling method, which in our case was random walk sampling away from a current live point since our test problems were all between 10D and 20D. The only exception was the 5D $\Lambda$CDM physics example (see~\cref{subsec:CMB}), for which uniform sampling is the default method since this problem is less than 10D.
    
    \item \textbf{\code{UltraNest/MLFriends}}: Implements various region and step sampling methods, along with reactive NS, a generalization of dynamic NS. Both reactive and static nested samplers were explored. The MLFriends version of UltraNest was used in this work.
    
    \item \textbf{\code{Nessai}}: Combines NS with artificial intelligence (AI) by using normalizing flows for sampling from the constrained prior.
    
    \item \textbf{\code{JaxNS}}: A probabilistic programming framework that implements NS in JAX for high performance through compilation. It employs 1D slice sampling without a step out procedure, using exponential contraction from the bounds of the prior domain.
    
    \item \textbf{\code{Nautilus}}: A pure-Python package for posterior and evidence estimation, utilizing importance sampling based on NS and neural networks.
\end{itemize}

Each algorithm's unique approach and specific features are designed to optimize performance and accuracy in NS, catering to the diverse needs of astrophysical research and beyond. 
Broadly they divide into two categories~\cite{Ashton:2022grj}: region(/rejection) samplers and path(/step) samplers. Region samplers aim to construct an explicit proxy for the likelihood-constrained prior distribution, and sample from that. They will be highly performant in low dimensions, but suffer from a curse of dimensionality in high dimensions, becoming exponentially inefficient above some problem- and sampler-dependent dimensionality $d_0\sim\mathcal{O}(10)$. \code{MultiNest}, \code{Nessai}, \code{Nautilus} and \code{MLFriends} fall into this category. Path samplers run a Markov chain starting from a random live point until it has ``forgotten'' where it started. These are less efficient in low dimensions, but their inefficiency scales linearly with dimensions, allowing them to operate in principle in hundreds of dimensions. The state-of-the-art is achieved with slice sampling~\cite{2022PSFor...5...46B}, as implemented in \code{PolyChord} and \code{JaxNS} (although \code{JaxNS} simultaneously uses an ellipsoidal element), with \code{Dynesty} and \code{UltraNest} switching to slice-sampling modes in high dimensions.

For each NS implementation we explored over a small grid of hyperparameters.
In selecting the explored hyperparameters for each implementation we tried to choose similarly to how a typical end-user would in their analysis.
This `end-user mindset' reflects the overall intent of the paper to help the community chose most wisely for their analysis. 
To this end, we chose to explore the most well-documented hyperparameters specific to each implementation, and used each implementation's default stopping conditions. 

Across most implementations there was a concept similar to the number of live points, in which case we explored settings of $\nlive=\{25D, 50D, 100D\}$.
We note that in the modern era most NS implementations do not have the concept of a static number of live points, but rather treat it as a dynamic quantity (particularly for the purposes of parallelisation). 
In these cases, it was often possible to set the notion of a minimal number of live points.
By far the most impactful hyperparameter for the quality and computation expense of each run is the number of live points. 


\section{Methodology} \label{sec:methodology}

In this section, we provide a brief outline of how we chose to compare samplers. 

\subsection{Evaluating Nested Sampling implementations}

In this study, we aimed to evaluate different NS implementations to find the most computationally efficient solution for various problems, adopting the mindset of the `typical experimenter'. 
The goal was to identify an NS implementation that achieves convergence with minimal computational effort, facilitating exploration within limited time frames. 
Therefore, our approach was to explore each NS implementation within consistent hyperparameter spaces constrained to a fixed computational limit per run, and to identify the most economical converging run. 

Since each NS implementation has differing algorithmic structure, ensuring consistent hyperparameter spaces was reduced to a simple scheme of controlling the most well-documented hyperparameters. 
Specifically, for implementations with the concept of live points, the exploration space was $\{25D, 50D, 100D\}$, except for the Rastrigin problem which also included $\{200D, 500D, 1000D\}$. An exception to this hyperparameter search was the \texttt{nautilus} algorithm, for which the number of live points was consistently set to the default value of 2000 as per the algorithm author's advice.
For implementations using Markov Chains, $5D$ accepted proposals per sample were selected.
Where multiple modes of operation existed, e.g. the Static or Reactive mode of \texttt{ultranest}, the top recommended mode(s) were used. 
Static nested sampling was chosen over dynamic to maintain consistency in the number of live points. 
All other hyperparameters were left at their default, including stopping conditions.
Each run was limited to one hour, except for the Rastrigin problem, which had a two-hour limit, reflecting practical constraints faced by non-expert experimenters.

Convergence was assessed via the Wasserstein distance measure, also known as the Earth-Mover's distance from a reference posterior. 
First, a reference posterior we generated for each problem using a high-resolution run of NS, making sure that this reference posterior closely matched the true posterior as closely as possible for each problem. Specifically, we used \texttt{JaxNS} with $2000 D$ live points, $10 D$ slices per acceptance.
Then, an upper bound on the multi-variate Wasserstein-$1$ distance was used as the distance measure, namely $W_1(P, Q) \leq \sum_i W_1(P_i, Q_i)$ where $W_1$ is the 1-norm Wasserstein distance, and $P_i, Q_i$ are the respective one-dimensional marginals of the distributions.
We then used per-problem convergence thresholds to identify convergence. 
We opted to compute the Wasserstein distance in the unit-cube scaled parameter spaces, hence the commonly used fiducial threshold of 0.1 was used for all problems except Eggbox and Rastrigin, which assumed 0.3 and 0.2 respectively, due to the more challenging nature of those problems.
Plots of the Wasserstein upper bound for the cheapest converged NS runs are shown in Figure~\ref{fig:wasserstein_upper}.
Finally, for each problem and NS implementation, the cheapest run within the convergence threshold was identified as the cheapest converging run.
During the course of our experimentation, we extended the hyperparameter space and computational limits for the Rastrigin problem, so that at least one NS implementation converged for each case.

\subsection{Diagnostics \& Metrics}\label{sec:metrics}

We are using two categories of algorithm to sample from a posterior distribution: MCMC and NS. In each case, we want to assess convergence, diagnose any problems with runs and measure performance. Although under appropriate conditions MCMC algorithms may be proven to converge asymptotically, at some point we must stop our chain(s). We would like to know whether the samples obtained at that point are representative of the underlying stationary distribution. They will not be representative in a short chain if the chain explores the posterior distribution slowly. This `slow mixing' may occur, for example, in multi-modal problems.

Unfortunately, assessing the convergence of an MCMC chain is extremely challenging~\cite{doi:10.1080/01621459.1996.10476956,2023arXiv231102726M} and arguably we at best make checks of pseudo-convergence, since no checks can tell us what would happen if we were to run the chain for longer~\cite{geyer2011introduction}. We use \code{arviz}~\cite{arviz_2019} to estimate the Gelman-Rubin $\rhat$ parameter~\cite{10.2307/2246093,doi:10.1080/10618600.1998.10474787} for each model parameter. This requires more than one MCMC chain, ideally initialised at different starting points, as it compares the within-chain and between-chain variances of a parameter. See~\cite{2019arXiv190308008V,2021arXiv211013017M} for up-to-date discussions about the limitations, interpretation and developments of the $\rhat$ parameter. Recently, $\rhat \le 1.01$ was recommended as a convergence check~\cite{2019arXiv190308008V}.

Ensemble MCMC samplers are somewhat problematic with regard to diagnostics and metrics. In ensemble samplers, efficient proposals are constructed using an ensemble of walkers. As the proposals are constructed from the ensemble, the walkers are not independent chains. Consequently, the conventional interpretations of and rules of thumb about the $\rhat$ parameter (and to some degree the ESS estimates discussed later) are open to question.

NS does not have the same question of convergence to a stationary distribution, since it is not building a Markov chain. This may, however, be seen as a drawback as we cannot efficiently generate more samples by running NS for longer (though see the discussion on dynamic NS). In NS, rather, the key questions are whether we prematurely terminated NS and whether we genuinely drew independent samples from the constrained prior because if we did not, the NS results are faulty. In~\cite{Fowlie:2020mzs}, a new test was introduced to diagnose problems in this aspect of NS runs. The diagnostic, $p_{\rm insert}$, makes use of the fact that the rank indices of new live points should be uniformly distributed. The result of this diagnostic is a $p_{\rm insert}$ from a one-sample test between the rank indices from an NS run and a uniform distribution. This test has not yet been implemented across all the algorithms used in this paper, so there are some missing $p_{\rm insert}$ in certain test problems. As always, care should be taken in interpreting $p_{\rm insert}$, though small $p_{\rm insert}$ could indicate a failure to sample from the constrained prior and thus a faulty NS run.\footnote{If we fail to faithfully sample from the constrained prior whilst compressing to the posterior bulk, it might impact the evidence but not the posterior. If, on the other hand, it happens whilst compressing through the bulk of the posterior, posterior inferences may be faulty as well.}

To quantify the performance of an algorithm, we consider what we obtained and for what cost. As we are concerned with sampling from the posterior, we measure what we obtained by the effective number of independent samples drawn from the posterior, $\neff$. Unfortunately, the samples we obtain are not independent draws from the posterior. In Markov chains the samples are correlated as the state of the chain depends on the previous state. In NS, the samples obtained are weighted, as they are weighted draws from the NS procedure rather than draws directly from the posterior. The cost that we are concerned with is the number of likelihood evaluations, $\nlike$, such that as a metric we consider
\begin{equation}
\text{Efficiency} = \frac{\neff}{\nlike}.
\end{equation}
This doesn't take into account the fact that different algorithms may be parallelized more efficiently than others. The effective sample size may depend on the parameter or quantity of interest; in such cases we take the minimum among model parameters. See \cref{sec:ess} for a discussion of effective sample size estimates in MCMC and NS. Broadly speaking, $\neff$ estimates may not reliable when $\neff \lesssim 100$.


\section{Results}\label{sec:results}

We investigated the algorithms in \cref{sec:algorithms} by running them on several test functions and on examples inspired by global fits in particle physics and cosmology. The test functions were chosen to exhibit pathological features, including high-dimensionality, multi-modality, degeneracy, and phase transitions.

\subsection{Eggbox}

The Eggbox function, given by
\begin{equation}\label{eq:eggbox}
    f(\bm{\theta}) = \left(2 + \prod_{i = 1}^D \left[\cos\left(\frac{\theta_i}{2}\right)\right]\right)^{5},
\end{equation}

leads to a complicated multimodal posterior distribution, as illustrated in a 10-dimensional corner plot shown in \cref{fig:eggbox}. The posterior mean obtained through different algorithms is summarised in \cref{tab:Eggbox_means}, while \cref{tab:Eggbox_metrics} presents their corresponding performance metrics and diagnostics.\footnote{We note that for a highly multi-modal problem, the posterior mean proves to be a statistic which is sensitive to misfitting, but otherwise is not particularly useful in comparison with for example the individual mode means.}  The term ``Modes Found'' refers to the percentage of modes for which an algorithm generates sufficient samples to outline a $1\sigma$ contour within the 2D marginal distributions in \cref{fig:eggbox}. We note that this is a considerably easier problem then enumerating the $5^{10}\approx10^7$ modes present, and is only marginally interesting for a distribution with a high degree of axis-aligned symmetry such as the Eggbox.

Scrutinising these results shows that \verb|MCMC-diffusion| and \verb|ptemcee| demonstrate superior performance in locating most of the modes efficiently compared to NS methods.  Specifically, \verb|dynesty| excels in identifying the highest number of modes among the algorithms, although it requires significantly more likelihood evaluations than MCMC approaches to achieve this outcome.  \verb|MCMC-diffusion|'s efficacy in navigating multimodal distributions, characterised by its ability to transition between modes efficiently, is evident in this scenario.  While \verb|ptemcee| performs well, it struggles with modes situated at the parameter space's edges, leading to narrower posterior standard deviations.

Notably, other traditional MCMC algorithms fail to converge within the specified computational constraints. Regarding \verb|MCMC-diffusion|, multiple chains are executed to identify various modes efficiently, as outlined in the original paper~\cite{Hunt-Smith:2023ccp}. This allows the algorithm to overcome the traditional limitations of MCMC (e.g., fixed step size, local optima trapping). It should be noted that in a system of high symmetry (namely equal mode weighting and separation) multi-start MCMC produces the correct result. However, if modes are asymmetric, multi-start MCMC will initially populate the modes in proportion to the size of their burn-in basin of attraction, which may not be the same as their posterior weight. Only after running for long enough to transition between modes will the correct posterior be sampled, which may be after the computational budget has been exhausted, and often long after a convergence criterion has been triggered. We shall see this for the spike-slab function discussed in \cref{sec:spike_and_slab}.

\begin{figure} [h]
\centering
\includegraphics[scale = 0.7]{results/Eggbox_10D.pdf}
\caption{Corner plot of the $10D$ Eggbox function in \cref{eq:eggbox}. The plot shows the posteriors from the best performing MCMC and NS implementations.}
\label{fig:eggbox}
\end{figure}

\begin{table}[]
    \centering
    \begin{tabular}{cccccc}
    \toprule
    Algorithm & Diagnostic & \neff & \nlike & Efficiency & Modes Found\\
    \midrule
    MCMC: \verb|emcee| & \rhat = 1.07 & 31 & 1.50M & 2.06 $\times 10^{-5}$ & 69\%\\
    \midrule
    MCMC: \verb|ptemcee| & \rhat = 1.00 & 110k & 1.50M & 0.0733 & 91\%\\
    \midrule
    MCMC: \verb|zeus| & \rhat = 1.10 & 25 & 1.50M & 8.80 $\times 10^{-6}$ & 53\%\\
    \midrule
    \rowcolor{row-highlight}
    MCMC: \verb|MCMC-diffusion| & \rhat = 1.00 & 120k & 1.08M & 0.111 & 93\%\\
    \midrule
    \rowcolor{row-highlight}
    NS: \verb|dynesty| & $p_{\rm insert}$ = 0.23 & 2.04k & 26.8M & $7.59\times 10^{-5}$ & 96\%\\
    \bottomrule
    \end{tabular}
    \caption{Algorithm performance metrics for the $10D$ Eggbox test function.}
    \label{tab:Eggbox_metrics}
\end{table}

%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Rosenbrock}
%%%%%%%%%%%%%%%%%%%%%%%%%%%

The Rosenbrock function~\cite{Rosenbrock1960}, defined as
\begin{equation}
    f(\bm{\theta}) = \sum_{i=1}^{D-1}[100 \times (\theta_{i + 1} - \theta_i)^2 + (1-\theta_i)^2],
\end{equation}
displays a banana-shaped degeneracy in two dimensions.  A 10-dimensional corner plot illustrating this function is depicted in \cref{fig:Rosenbrock}, accompanied by a posterior mean detailed in \cref{tab:Rosenbrock_means} and summary metrics provided in \cref{tab:Rosenbrock_metrics}.

Analyzing the outcomes, the following key observations arise.  Among the NS algorithms, \verb|dynesty| appears to perform more accurately compared to others, as indicated by the posterior mean.  The other NS algorithms exhibit a slight underestimation in parameters $\theta_4-\theta_{10}$, with narrower standard deviations.  Further examination of the posterior plots reveals that the remaining NS algorithms fail to explore the entire distribution width effectively.  Notably, the second peak in parameters $\theta_6-\theta_8$ is notably shifted to the left, suggesting that these algorithms are unable to locate the broader peak positioned further to the right.

Algorithms such as \verb|emcee| and \verb|zeus| demonstrate insufficient convergence within the specified number of likelihood evaluations, as evidenced by the $\hat{R}$ metric for these methods.  With \verb|dynesty| requiring significantly more likelihood evaluations than \verb|ptemcee| or \verb|MCMC-diffusion|, the results imply that Markov chain Monte Carlo methods are once again demonstrating greater efficiency compared to NS in this context. 

\begin{figure} [h]
\centering
\includegraphics[scale = 0.7]{results/Rosenbrock_10D.pdf}
\caption{Corner plot of the $10D$ Rosenbrock function.}
\label{fig:Rosenbrock}
\end{figure}

\begin{table}[]
    \centering
    \begin{tabular}{ccccc}
    \toprule
    Algorithm & Diagnostic & \neff & \nlike & Efficiency\\
    \midrule
    MCMC: \verb|emcee| & \rhat = 1.35 & 7.10k & 4.00M & 0.00180\\
    \midrule
    \rowcolor{row-highlight}
    MCMC: \verb|ptemcee| & \rhat = 1.00 & 4.55k & 550k & 0.00828\\
    \midrule
    MCMC: \verb|zeus| & \rhat = 1.09 & 26.5k & 2.00M & 0.0131\\
    \midrule
    MCMC: \verb|MCMC-diffusion| & \rhat = 1.01 & 2.12k & 700k & 0.00303\\
    \midrule
    \midrule
    \rowcolor{row-highlight}
    NS: \verb|Dynesty| & $p_{\rm insert}$ = 0.38 & 2.6k & 5.1M & 5.1$\times 10^{-4}$ \\
    \midrule
    NS: \verb|Multinest| & $p_{\rm insert}$ = 0.1 & 2.6k & 167k & 0.02 \\
    \midrule
    NS: \verb|Polychord| & $p_{\rm insert}$ = 0.69 & 3k & 2.9M & 0.001 \\
    \midrule
    NS: \verb|Nessai| & $p_{\rm insert}$ = 5.13$\times 10^{-5}$ & 3.9k &  203k & 0.02 \\ 
    \midrule
    NS: \verb|JaxNS| &  & 1.6k & 3.9M & 4.07$\times 10^{-4}$ \\
    \midrule
    NS: \verb|Nautilus| &  & 10k & 179k & 0.056 \\
    \bottomrule
    \end{tabular}
    \caption{Summary of algorithm performance for $10D$ Rosenbrock test function. 
    }
    \label{tab:Rosenbrock_metrics}
\end{table}

%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Rastrigin}
%%%%%%%%%%%%%%%%%%%%%%%%%

The Rastrigin function~\cite{rastrigin1974systems} is given by
\begin{equation}
    f(\bm{\theta}) = 10 D + \sum_{i=1}^{D}\left[ \theta_i^2 - 10 \cos(2\pi\theta_i)\right],
\end{equation}
where $D$ is the number of dimensions of $\bf{\theta}$. 

The Rastrigin function is also multimodal.  A 10-dimensional corner plot depicting this function is presented in \cref{fig:Rastrigin}, complemented by the computed posterior mean documented in \cref{tab:Rastrigin_means} and summarised metrics detailed in \cref{tab:Rastrigin_metrics}.

Key observations from the analysis of these results include the following.  The \verb|ptemcee| algorithm demonstrates a notable proximity to the true distribution compared to other methods, requiring a significantly lower number of likelihood evaluations (400,000) compared to \verb|Dynesty| (11M) to achieve this result.  This efficiency indicates a compelling performance advantage for \verb|ptemcee| in capturing the underlying distribution accurately within a more feasible computational budget.  The contrast in performance metrics highlights the varying computational demands and effectiveness of different algorithms when applied to this multimodal function.  

\begin{figure} [h]
\centering
\includegraphics[scale = 0.7]{results/Rastrigin_10D.pdf}
\caption{Corner plot of the $10D$ Rastrigin function.}
\label{fig:Rastrigin}
\end{figure}


\begin{table}[]
    \centering
    \begin{tabular}{ccccc}
    \toprule
    Algorithm & Diagnostic & \neff & \nlike & Efficiency\\
    \midrule
        MCMC: \verb|emcee| & \rhat = 1.12 & 25 & 400k & 6.28 $\times 10^{-5}$\\
    \midrule
    \rowcolor{row-highlight}
    MCMC: \verb|ptemcee| & \rhat = 1.00 & 14.1k & 400k & 0.0353\\
    \midrule
    MCMC: \verb|zeus| & \rhat = 1.12 & 27 & 400k & 2.67 $\times 10^{-5}$\\
    \midrule
    MCMC: \verb|MCMC-diffusion| & \rhat = 1.01 & 11.2k & 400k & 0.0275\\
    \midrule
    \rowcolor{row-highlight}
    NS: \verb|JaxNS| &  & 54k & 104M & 5.2$\times 10^{-4}$ \\
    \bottomrule
    \end{tabular}
    \caption{Summary of algorithm performance for $10D$ Rastrigin test function.}
    \label{tab:Rastrigin_metrics}
\end{table}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsubsection{Spike-slab function}\label{sec:spike_and_slab}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The spike-slab function is commonly used in statistical modeling, particularly in the context of variable selection, as a Bayesian prior distribution.  It combines a point-like likelihood mass (spike) with a continuous distribution (slab).  This distribution is typically used to encourage sparsity in model parameters, allowing for automatic variable selection during model estimation.  

The spike-slab function may have a spike that is similar in volume to the slab which can pose challenges for Markov chain Monte Carlo algorithms.  These challenges include poor mixing between modes, leading to inefficient exploration, and convergence issues due to sharp transitions and narrow bridges.

Our spike-slab function is the sum of a narrow $2D$ Gaussian and a broad multi-variate Gaussian. The narrow Gaussian has a mean of $6$ for each parameter and a diagonal covariance matrix with a standard deviation of $0.08$ for each parameter. Similarly, the broader Gaussian has a mean of $2.5$ and a standard deviation of $0.8$. A corner plot of this function in $10D$ is shown in \cref{fig:spikeslab}, along with the posterior mean and error in \cref{tab:spikeslab_means} and summary metrics in \cref{tab:spikeslab_metrics}.

Most MCMC algorithms, except for \verb|MCMC-diffusion|, struggle to correctly balance the weights assigned to the spike and slab components.  Despite indicating convergence based on the $\hat{R}$ metric, these algorithms converge to incorrect estimates, underscoring the complexity and potential confusion posed by the spike-slab function for MCMC methods. 
Even \verb|ptemcee| demonstrates a tendency to incorrectly estimate the relative weight of the spike and slab components, as can be seen by the underestimation of the posterior mean in parameters $\theta_1$ and $\theta_2$ (see table~\ref{tab:spikeslab_means}), indicating \verb|ptemcee| has focused too heavily on the slab. This further highlights the difficulty in achieving accurate balance when dealing with the spike-slab function within Bayesian inference settings. 

Nested sampling can also show similar difficulties. Whilst region samplers with a well-trained proxy will capture mode weighting up to some statistical error, chain based samplers on their own will mis-estimate modes that they cannot ergodically mix~\cite{Handley:2015}. Samplers with semi-independent mode tracking such as \code{PolyChord} and \code{GGNS}~\cite{2023arXiv231203911L} mitigate this (up to a statistical error which they track).
 This is backed up by both the posterior mean and Wasserstein distances, since \code{PolyChord} was the only NS algorithm that got close to the true distribution in this test problem.

 These observations emphasise the intricate nature of algorithmic performance, and are important to bear in mind when considering the challenges associated with complex model priors. 



\begin{figure} [h]
\centering
\includegraphics[scale = 0.7]{results/SpikeSlab_10D.pdf}
\caption{Corner plot of the $10D$ spike-slab function.}
\label{fig:spikeslab}
\end{figure}

\begin{table}[]
    \centering
    \begin{tabular}{ccccc}
    \toprule
    Algorithm & Diagnostic & \neff & \nlike & Efficiency\\
    \midrule
    MCMC: \verb|emcee| & \rhat = 1.01 & 1.44k & 250k & 0.00600\\
    \midrule
    MCMC: \verb|ptemcee| & \rhat = 1.00 & 22k & 250k & 0.0880\\
    \midrule
    MCMC: \verb|zeus| & \rhat = 1.00 & 8.79k & 250k & 0.0293\\
    \midrule
    \rowcolor{row-highlight}
    MCMC: \verb|MCMC-diffusion| & \rhat = 1.00 & 9.66k & 90k & 0.107\\
    \midrule
    NS: \verb|Polychord| & $p_{\rm insert}$ = 0.32 & 15k & 7.6M & 0.002 \\
    \midrule
    \rowcolor{row-highlight}
    NS: \verb|JaxNS| &  & 5.6k  & 4M  & 0.001 \\
    \midrule
    \bottomrule
    \end{tabular}
    \caption{Summary of algorithm performance for $10D$ spike-slab test function}
    \label{tab:spikeslab_metrics}
\end{table}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Cosmology --- Planck}
\label{subsec:CMB}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

The Lambda Cold Dark Matter ($\Lambda$CDM) model stands as the prevailing cosmological paradigm, aiming to describe the universe's composition, structure, and evolution. At its core, the $\Lambda$CDM model is anchored in the Big Bang Theory and inflation, further augmented by the cosmological constant ($\Lambda$) and cold dark matter (CDM) components to address observations not fully explained by traditional cosmological frameworks.

The model's elegance lies in its foundation upon a mere six parameters, each playing a pivotal role in shaping our understanding of our Universe. Namely, the angular size of the sound horizon at the surface of last scattering ($\theta_s$), the baryon density ($\Omega_b h^2$), the dark matter density ($\Omega_c h^2$), the amplitude of primordial fluctuations ($A_s$), the scalar spectral index ($n_s$) and the optical depth to reionization ($\tau$).

Bayesian global fits of the $\Lambda$CDM model are the state of the art for extracting knowledge of these fundamental cosmological parameters. For any given parameter point, the
Boltzmann code CLASS~\cite{lesgourgues2011cosmic} can be used to compute various power spectra of the fluctuations in the cosmic microwave background, which can then be compared to current observations. The spectra are expressed in terms of the multipole moment $\ell$, related to angular scales on the sky, with the notation $C_\ell$ used for the angular power spectrum. This spectrum reflects the variance of the temperature fluctuations as a function of the angular scale. Depending on the nature of the fluctuations, we can categorize them into different types, primarily TT, TE, and EE, each offering unique insights into the early universe. The TT (Temperature-Temperature) spectrum represents the correlation of temperature fluctuations, providing a direct measurement of the cosmic microwave background's anisotropies. The TE (Temperature-E-mode Polarization) spectrum captures the cross-correlation between temperature fluctuations and the E-mode polarization pattern, offering a complementary view that helps break degeneracies in cosmological parameter estimation. Lastly, the EE (E-mode Polarization-E-mode Polarization) spectrum focuses on the correlation within the E-mode polarization itself, sensitive to the early universe's density fluctuations and the epoch of reionization. We denote them as $C_\ell^\text{TT}$, $C_\ell^\text{TE}$ and $C_\ell^\text{EE}$.  

With those we can compute the likelihood function (see Eq. 3.7 in~\cite{Cole_2022})
\begin{equation}
\ln p (\hat{C}(\theta)|C) = -\frac{1}{2} \sum_\ell (2\ell + 1) \left[ \frac{D}{|C|} + \ln \frac{C}{\hat{C}} - 2 \right] ,
\label{eq:loglike}
\end{equation}
where $D = C_\ell^\text{TT} \hat{C}_\ell^\text{EE} + \hat{C}_\ell^\text{TT} C_\ell^\text{EE} - 2 C_\ell^\text{TE} \hat{C}_\ell^\text{TE}$, and we shift the likelihood such that 
\begin{equation}
\ln p \left(C=\hat{C}(\theta_0) | C \right) = 0,
\end{equation}
where we choose for our fiducial cosmology\footnote{For details see~\cite{Cole_2022}.}
\begin{equation}
\theta_0 = \left(\Omega_b h^2, \Omega_{\text{cdm}} h^2, 100 \theta_s, \ln(10^{10} A_s), n_s, \tau \right) = (0.0224, 0.12, 1.0411, 3.0753, 0.965, 0.054).
\end{equation}

\begin{figure} [h]
\centering
\includegraphics[scale = 0.7]{results/cmb_performance.pdf}
\caption{Validation plot of the network, showing the true log likelihood on the x-axis and the predicted value on the y-axis.}
\label{fig:cmb_performance}
\end{figure}

The computational expense of evaluating the likelihood function represents a major challenge in inferring the parameters of cosmological models such as the six-dimensional $\Lambda$CDM model. To overcome this challenge, we have used a deep neural network to create a direct and efficient mapping from the cosmological parameter space to the log-likelihood defined in \cref{eq:loglike}. By training the network with many simulations, we bypass the need for computationally intensive direct simulations during the global fit itself. This strategy significantly speeds up the parameter estimation process, as has been demonstrated by previous work such as \code{CosmoPower}~\cite{SpurioMancini:2021ppk}

To this end, we have generated a large dataset of 1.2 million data points, each representing a unique configuration within the $\Lambda$CDM parameter space, based on a flat prior distribution as shown in \cref{tab:priors}. We used 80\% of this dataset for training the neural network and split the remaining 20\% evenly between validation and testing. Both the input and the output data were normalised to a Gaussian distribution. The architecture of our neural network is explicitly tailored to map $\Lambda$CDM parameters to their log-likelihood counterparts.

\begin{table}[ht]
\centering
\begin{tabular}{l c}
\hline
Parameter & Prior Range \\
\hline
$100 \theta_s$ & [1.03, 1.05] \\
$\Omega_b h^2$ & [0.020, 0.024] \\
$\Omega_c h^2$ & [0.10, 0.14] \\
$n_s$ & [0.9, 1.0] \\
$\ln(10^{10} A_s)$ & [2.98, 3.16] \\
$\tau$ & [0.010, 0.097] \\
\hline
\end{tabular}
\caption{Prior ranges for the Lambda CDM model parameters.}
\label{tab:priors}
\end{table}


The neural network model was developed with \code{TensorFlow} and our model consists of a sequential arrangement of six hidden layers, each with 100 neurons. These layers use the Scaled Exponential Linear Unit (SELU)~\cite{klambauer2017selfnormalizing}  activation function, which was chosen for its self-normalising properties that significantly improve training efficiency. The initial weights of these layers were set using the LeCun Normal initialiser to optimise the initial conditions for training the network. The output layer consists of a single neuron with a linear activation function for our regression task. Finally, the Mean Absolute Error was selected as the loss function. 

A multi-layered training optimisation strategy was used to refine the performance of the model. This included the use of the Adam optimiser~\cite{kingma2017adam} with an initial learning rate of 0.001. To further improve the accuracy of the model, the learning rate was halved with each complete run of the dataset. To minimise the risk of overfitting, training was also terminated prematurely if no improvement in validation loss was observed over a period of ten epochs.

The performance of our neural network on the test data set is visualised in \cref{fig:cmb_performance}, demonstrating the ability of the network to accurately predict the log-likelihood values. 
 
A corner plot is shown in \cref{fig:cmb}, along with the posterior mean and error in \cref{tab:cmb_means} and summary metrics in \cref{tab:cmb_metrics}.

All algorithms converge effectively to the correct answer, as evidenced by the excellent agreement in the posterior mean, which is expected for a well-behaved unimodal function. Whilst neural network approximations can reliably reduce the computational load~\cite{Piras:2024dml} of historically expensive portions of the calculation, as we move further into the era of precision cosmology with more and more systematics to be modelled it will prove crucial to study which algorithms are the most efficient in terms of computational cost and performance. 

The most efficient algorithm was found to be \verb|Multinest|, which reached a satisfactory estimate of the posterior with only 8200 likelihood evaluations in total. The best MCMC algorithm was found to be \verb|ptemcee|, although \verb|zeus| and \verb|MCMC-diffusion| showed very similar performance. This matches the intuition that, for an unimodal posterior, the benefit of algorithms that allow for better mixing of modes is reduced. However, the evidence of this test shows that they still allow for a more efficient exploration of the posterior relative to more basic techniques. It is worth noting that the overall efficiency is relatively low for all the algorithms. 

Most importantly, this work shows that a CMB $\Lambda$CDM cosmological example is not a stringent test of a sampler's efficacy in comparison with the other examples considered in this paper, as the posterior is well-constrained in all parameters and approximately gaussian. This is not true for beyond $\Lambda$CDM models, or for non CMB data as is the case on both counts for the recent DESI analysis~\cite{DESI:2024mwx}.

\begin{figure} [h]
\centering
\includegraphics[scale = 0.7]{results/CMB.pdf}
\caption{Corner plot for the CMB Likelihood.}
\label{fig:cmb}
\end{figure}

\begin{table}[]
    \centering
    \begin{tabular}{ccccc}
    \toprule
    Algorithm & Diagnostic & \neff & \nlike & Efficiency\\
    \midrule
    MCMC: \verb|emcee| & \rhat = 1.01 & 265 & 62.0k & 0.00875\\
    \midrule
    \rowcolor{row-highlight}
    MCMC: \verb|ptemcee| & \rhat = 1.00 & 2.68k & 62.0k & 0.0432\\
    \midrule
    MCMC: \verb|zeus| & \rhat = 1.00 & 2.14k & 62.0k & 0.0345\\
    \midrule
    MCMC: \verb|MCMC-diffusion| & \rhat = 1.00 & 2.09k & 62.0k & 0.0337\\
    \midrule
    NS: \verb|Dynesty| & $p_{\rm insert}$ = 0.72 & 2k &  359k &  5.6$\times 10^{-3}$\\
    \midrule
    \rowcolor{row-highlight}
    NS: \verb|Multinest| & $p_{\rm insert}$ = 6.04$\times 10^{-7}$ & 861 & 8.2k & 0.1 \\
    \midrule
    NS: \verb|Polychord| & $p_{\rm insert}$ = 0.96 & 2k & 872k & 2.3$\times 10^{-3}$ \\
    \midrule
    NS: \verb|Nessai| & $p_{\rm insert}$ = 0.18 & 1.37k & 25.6k & 0.054\\ 
    \midrule
    NS: \verb|JaxNS| &  & 604 & 633k  & 9.5$\times 10^{-4}$ \\
    \midrule
    NS: \verb|Nautilus| &  & 10k & 82.7k & 0.12 \\
    \midrule
    NS: \verb|Ultranest| &  & 958 & 63k & 0.015 \\
    \midrule
    \bottomrule
    \end{tabular}
    \caption{Summary of algorithm performance for CMB likelihood}
    \label{tab:cmb_metrics}
\end{table}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\subsection{Particle physics --- LHC}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
An additional example of the use of global fit techniques in particle astrophysics is the attempt to explore models of beyond-Standard Model particle physics. The Standard Model, which compromises a series of gauge field theories describing the matter and interactions in our universe, suffers from various theoretical challenges and is known to be incomplete. Beyond-Standard Model physics scenarios add extra fields and interactions, accompanied by various free parameters that can currently be constrained by the lack of evidence for new physics in particle colliders and other experiments. Accurately mapping the posterior of popular beyond-Standard Model theories is crucial for designing and optimising the future experiments that will uncover our next theory of particle physics.

To compare our Bayesian sampling techniques on a realistic example, we use the results of a previous global fit of the Minimal Supersymmetric Standard Model, performed by the GAMBIT collaboration~\cite{MSSM}. The 7 parameters of interest were the soft mass terms $M_2$, $m^2_{\tilde{f}}$, $m^2_{H_u}$, $m^2_{H_d}$ (defined at the scale $Q=1$~TeV), the trilinear couplings $A_{u_3}$, $A_{d_3}$ and $\tan\beta$ (defined at the scale $m_Z$). The fit also varied a number of nuisance parameters, including the top quark mass, the strong coupling constant, the nuclear matrix elements for WIMP-nucleon scattering and the local dark matter density, leading to 12 parameters in total. The fit included an extensive range of experimental constraints, including results from particle colliders, flavour physics, measurements of the cosmic microwave background and null observations from direct and indirect dark matter search experiments. Evaluating the likelihood of any particular parameter point was computationally expensive, and the total fit required extensive CPU hours. 

To ensure that we can compare our Bayesian sampling techniques with relatively minor computational effort, we interpolated the likelihood obtained in~\cite{MSSM} using a deep neural network, as originally proposed in~\cite{2012CoPhC.183..960B,Brooijmans:2020yij}. The network was used in a previous DarkMachines challenge, and details of the network architecture and validation can be found in Ref.~\cite{DarkMachinesHighDimensionalSamplingGroup:2021wkt}.

A corner plot is shown in \cref{fig:MSSM7}, along with the posterior mean and error in \cref{tab:mssm7_means} and summary metrics in \cref{tab:mssm7_metrics}. 

The results of this test show some distinct patterns of behaviour among the algorithms:

\begin{itemize}
    \item The posterior mean is broadly consistent between the \verb|ptemcee|, \verb|MCMC-diffusion|, \verb|Dynesty|, \verb|JaxNS|, \verb|Nautilus|, \verb|Ultranest| and \verb|PolyChord| algorithms, with the \verb|emcee| and \verb|zeus| values differing due to apparent lack of convergence. The likelihood surface for the MSSM7 is very complicated, with several disparate regions of high likelihood separated in the large volume of the parameter space, and this leads to a more complex posterior than that explored in any of the previous examples.
\item Even among the algorithms that broadly agree with each other,  the \verb|JaxNS| algorithm gives discrepant mean values for the parameters $m_f^2$, $m_{H_u}^2$, $m_{H_d}^2$, $A_u$, and $\tan (\beta)$, and has a large Wasserstein distance in parameters $m_f^2$ and $A_u$. It does not look wise to rely on the low-resolution results of \verb|JaxNS| in this case.
\item In terms of efficiency, \verb|Nautilus| is the most efficient algorithm, able to map the posterior satisfactorily with only 179,000 likelihood evaluations. For a likelihood that is as expensive as the original GAMBIT MSSM7 likelihood (which could take tens of minutes to hours per evaluation due to the need to simulate LHC proton-proton collisions), this efficiency is a crucial feature. The most efficient MCMC algorithm is \verb|ptemcee|, though again we see that the \verb|MCMC-diffusion| algorithm has a similar efficiency.
\end{itemize}

\begin{figure} [h]
\centering
\includegraphics[scale = 0.7]{results/MSSM7.pdf}
\caption{Corner plot for the MSSM7 Likelihood.}
\label{fig:MSSM7}
\end{figure}

\begin{table}[]
    \centering
    \begin{tabular}{ccccc}
    \toprule
    Algorithm & Diagnostic & \neff & \nlike & Efficiency\\
    \midrule
    MCMC: \verb|emcee| & \rhat = 1.76 & 43 & 111k & 4.18 $\times 10^{-4}$\\
    \midrule
    \rowcolor{row-highlight}
    MCMC: \verb|ptemcee| & \rhat = 1.00 & 6.1k & 123k & 0.0495\\
    \midrule
    MCMC: \verb|zeus| & \rhat = 1.21 & 141 & 111k & 1.17$\times 10^{-3}$\\
    \midrule
    MCMC: \verb|MCMC-diffusion| & \rhat = 1.00 & 4.3k & 111k & 0.0387\\
    \midrule
    \verb|Dynesty| & $p_{\rm insert}$ = 0.15 & 3.5k &  969k & 3.7$\times 10^{-3}$\\
    \midrule
    \verb|JaxNS| &  & 1.9k & 3.9M  & 4.9$\times 10^{-4}$\\
    \midrule
    \rowcolor{row-highlight}
    \verb|Nautilus| &  & 10k & 179k & 0.0559 \\
    \midrule
    \verb|Ultranest| &  & 2.8k & 428k & 6.4$\times 10^{-3}$ \\
    \midrule
    \bottomrule
    \end{tabular}
    \caption{Summary of algorithm performance for MSSM7 likelihood}
    \label{tab:mssm7_metrics}
\end{table}


\section{Conclusions}
\label{sec:conclusions}

We have performed a detailed comparison of a variety of Bayesian sampling algorithms in an attempt
to determine to what extent each of these algorithms can accurately and efficiently describe complicated high-dimensional test functions and real-world physics likelihoods. We have approached this question by studying algorithmic performance out-of-the-box with minimal hyperparameter tuning and low computation time, so as to simulate the typical performance one might expect to quickly obtain as a physicist unfamiliar with the inner workings of each algorithm. On this basis we can reach a number of conclusions:

\begin{itemize}
    \item Modern MCMC tools such as \code{MCMC-diffusion} and \code{ptemcee} can tackle multi-modal problems, bringing MCMC efficiency to a realm previously only solvable with Nested Sampling. These modern MCMC algorithms tend to be more efficient than their NS counterparts across all the test functions studied here.
    \item The \code{emcee} and \code{zeus} algorithms are severely outclassed by the other algorithms present in this paper in terms of efficiency, and are rarely able to obtain reasonable results within the computational limits we have imposed.
    \item No NS algorithm has clearly emerged as the ``best'' in our results, rather certain algorithms appear more well suited to certain types of functions. For example, \code{Polychord} appears to be the most effective for a problem with differently weighted modes like the spike-slab, while \code{dynesty} appears to be the most effective for a heavily multimodal problem like the Eggbox.
    \item Subtlety exists even within NS when considering region-based sampling versus chain-based sampling with/without semi-independent mode tracking.
    \item The CMB+$\Lambda$CDM physics likelihood was accurately and efficiently sampled by all the algorithms tested here, so cosmologists dealing with similar unimodal problems need not be picky about which specific algorithm they choose among the options we have explored in this paper.
\end{itemize}

For both the
analytic functions and the two physics likelihoods explored in this paper, we have observed that many of the algorithms used here show promising performance. This certainly motivates their use in further
real-world physics applications, and we look forward to reading future examples
of their use.

\section{Acknowledgements}
The author(s) gratefully acknowledges the computer resources at Artemisa, funded by the European Union ERDF and Comunitat Valenciana as well as the technical support provided by the Instituto de FÃ­sica Corpuscular, IFIC (CSIC-UV). R. RdA is supported by PID2020-113644GB-I00 from the Spanish Ministerio de Ciencia e InnovaciÃ³n and by the PROMETEO/2022/69 from the Spanish GVA. AF is supported by an NSFC Research Fund for International Young Scientists grant 11950410509. MJW is supported by the ARC Centre of Excellence for Dark Matter Particle Physics CE200100008, and CB by the ARC Discovery Projects DP210101636 and DP220100643. We also thank Johannes Lange for useful discussions on the \texttt{nautilus} algorithm.

\appendix

\section{Effective sample size}\label{sec:ess}

\subsection{MCMC}

The effective number of samples in an MCMC chain may be computed per parameter by taking into account the auto-correlation. We may define $\neff$ in this setting through the variance of a posterior mean,
\begin{equation}
\text{Var}(\bar x) = \frac{\text{Var}(x)}{\neff}
\end{equation}
This results in
\begin{equation}
\neff^\text{MCMC} = \frac{n}{1 + 2 \sum_{t=1}^\infty \rho(t)}
\end{equation}
where $\rho(t)$ is the auto-correlation at lag $t$. We again use \code{arviz}~\cite{arviz_2019} to compute this. This measure wouldn't be appropriate if one were particularly interested in samples from the tail of the distribution. To ensure that diagnostics and even $\neff$ itself may be computed reliably,~\cite{2019arXiv190308008V} recommend at least $400$ effective samples for any scalar quantity of interest. Since the auto-correlation differs per parameter, as a conservative overall effective sample size we take the minimum $\neff$ among the model parameters.

\subsection{Nested sampling}

In NS, we estimate the effective sample size using a standard rule of thumb~\cite{kish},
\begin{equation}\label{eq:neff_kish}
\neff^\text{Kish} = \frac{1}{\sum_{i=1}^N w_i^2}
\end{equation}
where $\sum w_{i=1}^N = 1$ and $w_i$ are the NS weights. This is a well-known heuristic that unfortunately lacks formal justification~\cite{https://doi.org/10.1111/insr.12500} and should be used as a `rough guide'~\cite{bda}. 
We thus furthermore consider an information-theoretic alternative,
\begin{equation}\label{eq:neff_information}
\neff^\text{Information} = e^{-\sum_{i=1}^N w_i \log w_i} 
\end{equation}
In both cases, equally weighted samples, $w_i = 1 / N$ result in $\neff = N$, and we expect $\neff \propto \nlive$. Viewing them as expectations, by Jensen's inequality,
\begin{equation}
\langle w \rangle \ge e^{\langle \ln w \rangle}
\end{equation}
such that the rule of thumb is more conservative, $\neff^\text{Kish} \le \neff^\text{Information}$. To simulate the weights $w_i$ we use \code{anesthetic}~\cite{anesthetic}.

Unlike for MCMC, these are overall estimates, not per parameter. Thus, finally we build an estimator more directly comparable to the MCMC case per parameter by considering
\begin{equation}\label{eq:neff_bootstrap}
\neff^\text{Bootstrap} = \frac{\text{Var}(x)}{\text{Var}(\bar x)}
\end{equation}
where $\text{Var}(x)$ is the posterior variance of a parameter, and $\text{Var}(\bar x)$ is the variance of our estimate of the posterior mean of the parameter. The latter takes into account two sources of variance: sampling of the compression factors, $t$, and sampling $x$ from around a likelihood contour~\cite{2018BayAn..13..873H} using a bootstrap procedure in \code{nestcheck}~\cite{higson2018nestcheck,higson2019diagnostic}.

There is a computational subtlety about estimating $\neff^\text{Kish}$ from NS results. If we write the weights as
\begin{equation}
w_i \propto L_i \Delta X_i = L_i X_i (1 - t_i)
\end{equation}
such that
\begin{equation}
\sum_{i=1}^N w_i^2 \propto \sum_{i=1}^N L_i^2 X_i^2 (1 - t_i)^2
\end{equation}
and use estimators for $t_i \simeq \langle t \rangle$ in this equation, we typically overestimate $\neff^\text{Kish}$ by about a factor of two as $\langle (1 - t)^2 \rangle / (1 - \langle t \rangle )^2 \simeq 2$. A similar error occurs if using $\ln t_i \simeq \langle \ln t \rangle$.

Finally, chain sampler NS implementations produce a chain of phantom points when generating a draw from the constrained prior. These phantom points may contribute to the posterior samples, but due to their correlations their contribution to the effective sample size is challenging to quantify.

\section{Posterior mean and standard deviation}\label{sec:post_mean}

\subsection{Eggbox}

\begin{table}[h!]
    \hspace*{-2.7cm}
    \tiny
    \centering
    \begin{tabular}{ccccccccccc}
    \toprule
    Algorithm & $\theta_1$ & $\theta_2$ & $\theta_3$ & $\theta_4$ & $\theta_5$ & $\theta_6$ & $\theta_7$ & $\theta_8$ & $\theta_9$ & $\theta_{10}$\\
    \midrule
    \rowcolor{row-highlight}
    True & 15.7 $\pm$ 9.3 & 15.7 $\pm$ 9.3 & 15.7 $\pm$ 9.3 & 15.7 $\pm$ 9.3 & 15.7 $\pm$ 9.3 & 15.7 $\pm$ 9.3 & 15.7 $\pm$ 9.3 & 15.7 $\pm$ 9.3 & 15.7 $\pm$ 9.3 & 15.7 $\pm$ 9.3\\
    \midrule
    MCMC: \verb|emcee| & 13.8 $\pm$ 7.8 & 15.1 $\pm$ 7.1 & 15.7 $\pm$ 8.6 & 15.3 $\pm$ 7.2 & 16.6 $\pm$ 8.5 & 15.1 $\pm$ 8.6 & 15.9 $\pm$ 7.7 & 16.5 $\pm$ 8.4 & 15.3 $\pm$ 7.8 & 16.1 $\pm$ 7.5\\
    \midrule
    MCMC: \verb|ptemcee| & 15.9 $\pm$ 7.4 & 16.1 $\pm$ 7.8 & 15.8 $\pm$ 7.9 & 15.9 $\pm$ 8.2 & 15.5 $\pm$ 7.5 & 15.7 $\pm$ 7.6 & 15.3 $\pm$ 8.0 & 16.6 $\pm$ 8.1 & 16.2 $\pm$ 7.7 & 15.2 $\pm$ 8.2\\
    \midrule
    MCMC: \verb|zeus| & 15.4 $\pm$ 9.2 & 15.5 $\pm$ 9.3 & 15.2 $\pm$ 9.4 & 15.7 $\pm$ 9.4 & 15.8 $\pm$ 9.2 & 15.8 $\pm$ 9.1 & 15.8 $\pm$ 9.2 & 16.5 $\pm$ 9.4 & 15.3 $\pm$ 9.2 & 16.1 $\pm$ 9.2 \\
    \midrule
    \rowcolor{row-highlight}
    MCMC: \verb|MCMC-diffusion| & 16.5 $\pm$ 9.8 & 15.4 $\pm$ 9.3 & 15.1 $\pm$ 9.2 & 14.4 $\pm$ 8.7 & 15.2 $\pm$ 9.5 & 15.5 $\pm$ 9.1 & 14.6 $\pm$ 8.9 & 16.0 $\pm$ 8.5 & 15.7 $\pm$ 8.3 & 16.6 $\pm$ 9.4\\
    \midrule
    \rowcolor{row-highlight}
    NS: \verb|dynesty| & 15.6 $\pm$ 9.3 & 15.7 $\pm$ 9.4 & 15.5 $\pm$ 9.3 & 15.9 $\pm$ 9.2 & 15.9 $\pm$ 9.3 & 15.7 $\pm$ 9.4 & 15.5 $\pm$ 9.3 & 15.5 $\pm$ 9.4 & 15.7 $\pm$ 9.4 & 16.2 $\pm$ 9.4 \\
    \bottomrule
    \end{tabular}
    \caption{Posterior mean for $10D$ Eggbox test function. The true mean for each parameter is $15.7 \pm 9.3$.}
    \label{tab:Eggbox_means}
\end{table}

\subsection{Rosenbrock}

\begin{table}[h!]
    \hspace*{-2.7cm}
    \tiny
    \centering
    \begin{tabular}{ccccccccccc}
    \toprule
    Algorithm & $\theta_1$ & $\theta_2$ & $\theta_3$ & $\theta_4$ & $\theta_5$ & $\theta_6$ & $\theta_7$ & $\theta_8$ & $\theta_9$ & $\theta_{10}$\\
    \midrule
    MCMC: \verb|emcee| & 0.66 $\pm$ 0.45 & 0.64 $\pm$ 0.32 & 0.52 $\pm$ 0.35 & 0.39 $\pm$ 0.35 & 0.28 $\pm$ 0.32 & 0.19 $\pm$ 0.27 & 0.12 $\pm$ 0.21 & 0.07 $\pm$ 0.15 & 0.03 $\pm$ 0.10 & 0.01 $\pm$ 0.08\\
    \midrule
    \rowcolor{row-highlight}
    MCMC: \verb|ptemcee| & 0.92 $\pm$ 0.33 & 0.94 $\pm$ 0.15 & 0.91 $\pm$ 0.19 & 0.86 $\pm$ 0.23 & 0.80 $\pm$ 0.28 & 0.72 $\pm$ 0.32 & 0.64 $\pm$ 0.36 & 0.55 $\pm$ 0.41 & 0.48 $\pm$ 0.49 & 0.46 $\pm$ 0.69\\
    \midrule
    MCMC: \verb|zeus| & 0.65 $\pm$ 0.68 & 0.88 $\pm$ 0.24 & 0.84 $\pm$ 0.28 & 0.78 $\pm$ 0.32 & 0.72 $\pm$ 0.32 & 0.64 $\pm$ 0.38 & 0.56 $\pm$ 0.40 & 0.48 $\pm$ 0.42 & 0.41 $\pm$ 0.48 & 0.39 $\pm$ 0.63\\
    \midrule
    MCMC: \verb|MCMC-diffusion| & 0.92 $\pm$ 0.31 & 0.93 $\pm$ 0.15 & 0.90 $\pm$ 0.20 & 0.86 $\pm$ 0.25 & 0.80 $\pm$ 0.28 & 0.73 $\pm$ 0.32 & 0.67 $\pm$ 0.34 & 0.56 $\pm$ 0.40 & 0.48 $\pm$ 0.49 & 0.50 $\pm$ 0.71\\
    \midrule
    \midrule
    \rowcolor{row-highlight}
    NS: \verb|dynesty| & 0.94 $\pm$ 0.22 & 0.93 $\pm$ 0.16 & 0.90 $\pm$ 0.20 & 0.86 $\pm$ 0.24 & 0.80 $\pm$ 0.29 & 0.72 $\pm$ 0.33 & 0.64 $\pm$ 0.37 & 0.55 $\pm$ 0.41 & 0.47 $\pm$ 0.48 & 0.45 $\pm$ 0.70 \\
    \midrule
    NS: \verb|multinest| & 0.91 $\pm$ 0.23 & 0.89 $\pm$ 0.20 & 0.83 $\pm$ 0.25 & 0.75 $\pm$ 0.30 & 0.66 $\pm$ 0.33 & 0.54 $\pm$ 0.34 & 0.42 $\pm$ 0.33 & 0.30 $\pm$ 0.30 & 0.18 $\pm$ 0.25 & 0.10 $\pm$ 0.20 \\
    \midrule
    NS: \verb|nessai| & 0.92 $\pm$ 0.19 & 0.89 $\pm$ 0.19 & 0.83 $\pm$ 0.24 & 0.76 $\pm$ 0.28 & 0.67 $\pm$ 0.31 & 0.54 $\pm$ 0.32 & 0.41 $\pm$ 0.31 & 0.27 $\pm$ 0.27 & 0.15 $\pm$ 0.21 & 0.07 $\pm$ 0.17 \\
    \midrule
    NS: \verb|JaxNS| & 0.93 $\pm$ 0.26 & 0.93 $\pm$ 0.14 & 0.89 $\pm$ 0.18 & 0.83 $\pm$ 0.22 & 0.73 $\pm$ 0.26 & 0.61 $\pm$ 0.29 & 0.46 $\pm$ 0.29 & 0.30 $\pm$ 0.26 & 0.16 $\pm$ 0.20 & 0.06 $\pm$ 0.15 \\
    \midrule
    NS: \verb|nautilus| & 0.93 $\pm$ 0.26 & 0.93 $\pm$ 0.16 & 0.90 $\pm$ 0.20 & 0.85 $\pm$ 0.24 & 0.79 $\pm$ 0.29 & 0.71 $\pm$ 0.33 & 0.62 $\pm$ 0.36 & 0.51 $\pm$ 0.38 & 0.21 $\pm$ 0.41 & 0.11 $\pm$ 0.50 \\
    \bottomrule
    \end{tabular}
    \caption{Posterior mean for $10D$ Rosenbrock test function.}
    \label{tab:Rosenbrock_means}
\end{table}

\newpage

\subsection{Rastrigin}

\begin{table}[h!]
    \hspace*{-2.7cm}
    \tiny
    \centering
    \begin{tabular}{ccccccccccc}
    \toprule
    Algorithm & $\theta_1$ & $\theta_2$ & $\theta_3$ & $\theta_4$ & $\theta_5$ & $\theta_6$ & $\theta_7$ & $\theta_8$ & $\theta_9$ & $\theta_{10}$\\
    \midrule
    \rowcolor{row-highlight}
    True & 0.00 $\pm$ 0.69 & 0.00 $\pm$ 0.69 & 0.00 $\pm$ 0.69 & 0.00 $\pm$ 0.69 & 0.00 $\pm$ 0.69 & 0.00 $\pm$ 0.69 & 0.00 $\pm$ 0.69 & 0.00 $\pm$ 0.69 & 0.00 $\pm$ 0.69 & 0.00 $\pm$ 0.69\\
    \midrule
    MCMC: \verb|emcee| & 0.27 $\pm$ 0.93 & -0.37 $\pm$ 0.92 & -0.26 $\pm$ 0.85 & -0.04 $\pm$ 0.99 & 0.37 $\pm$ 0.87 & -0.09 $\pm$ 1.23 & -0.53 $\pm$ 0.67 & 0.10 $\pm$ 0.65 & 0.22 $\pm$ 1.03 & 0.35 $\pm$ 1.10\\
    \midrule
    \rowcolor{row-highlight}
    MCMC: \verb|ptemcee| & -0.03 $\pm$ 0.69 & 0.01 $\pm$ 0.74 & 0.03 $\pm$ 0.70 & 0.02 $\pm$ 0.69 & 0.00 $\pm$ 0.70 & -0.02 $\pm$ 0.70 & -0.05 $\pm$ 0.70 & 0.01 $\pm$ 0.69 & 0.03 $\pm$ 0.73 & 0.08 $\pm$ 0.67\\
    \midrule
    MCMC: \verb|zeus| & 0.50 $\pm$ 2.39 & -0.36 $\pm$ 2.65 & 0.03 $\pm$ 2.81 & -0.36 $\pm$ 2.65 & 0.27 $\pm$ 2.67 & -0.43 $\pm$ 3.00 & -1.38 $\pm$ 2.70 & -0.90 $\pm$ 2.97 & -0.43 $\pm$ 2.60 & 0.57 $\pm$ 2.95\\
    \midrule
    MCMC: \verb|MCMC-diffusion| & -0.09 $\pm$ 0.82 & 0.24 $\pm$ 0.99 & 0.05 $\pm$ 0.72 & 0.14 $\pm$ 0.55 & -0.21 $\pm$ 0.69 & 0.02 $\pm$ 0.71 & 0.17 $\pm$ 0.84 & -0.38 $\pm$ 1.05 & -0.06 $\pm$ 0.78 & 0.09 $\pm$ 0.72\\
    \midrule
    \rowcolor{row-highlight}
    NS: \verb|JaxNS| & 0.13 $\pm$ 0.71 & 0.09 $\pm$ 0.76 & -0.27 $\pm$ 0.89 & -0.07 $\pm$ 0.71 & -0.05 $\pm$ 0.72 & -0.16 $\pm$ 0.64 & 0.16 $\pm$ 0.74 & -0.04 $\pm$ 0.56 & -0.31 $\pm$ 0.71 & -0.12 $\pm$ 0.76\\
    \bottomrule
    \end{tabular}
    \caption{Posterior mean for $10D$ Rastrigin test function. The true mean for each parameter is 0. }
    \label{tab:Rastrigin_means}
\end{table}

\subsection{Spike-slab function}

\begin{table}[h!]
    \hspace*{-2.5cm}
    \tiny
    \centering
    \begin{tabular}{ccccccccccc}
    \toprule
    Algorithm & $\theta_1$ & $\theta_2$ & $\theta_3$ & $\theta_4$ & $\theta_5$ & $\theta_6$ & $\theta_7$ & $\theta_8$ & $\theta_9$ & $\theta_{10}$\\
    \midrule
    \rowcolor{row-highlight}
    True & 4.25 $\pm$ 1.84 & 4.25 $\pm$ 1.84 & 0.00 $\pm$ 0.57 & 0.00 $\pm$ 0.57 & 0.00 $\pm$ 0.57 & 0.00 $\pm$ 0.57 & 0.00 $\pm$ 0.57 & 0.00 $\pm$ 0.57 & 0.00 $\pm$ 0.57 & 0.00 $\pm$ 0.57\\
    \midrule
    MCMC: \verb|emcee| & 2.60 $\pm$ 1.09 & 2.62 $\pm$ 1.08 & 0.01 $\pm$ 0.88 & -0.00 $\pm$ 0.88 & 0.04 $\pm$ 0.88 & 0.01 $\pm$ 0.89 & 0.00 $\pm$ 0.87 & -0.01 $\pm$ 0.88 & -0.01 $\pm$ 0.87 & 0.00 $\pm$ 0.88\\
    \midrule
    MCMC: \verb|ptemcee| & 2.52 $\pm$ 0.94 & 2.53 $\pm$ 0.93 & 0.01 $\pm$ 0.88 & -0.01 $\pm$ 0.89 & -0.03 $\pm$ 0.89 & 0.01 $\pm$ 0.88 & 0.00 $\pm$ 0.89 & 0.01 $\pm$ 0.89 & -0.02 $\pm$ 0.89 & 0.02 $\pm$ 0.89\\
    \midrule
    MCMC: \verb|zeus| & 3.20 $\pm$ 1.62 & 3.20 $\pm$ 1.62 & 0.01 $\pm$ 0.82 & 0.01 $\pm$ 0.82 & 0.0 $\pm$ 0.82 & -0.01 $\pm$ 0.82 & 0.00 $\pm$ 0.82 & 0.00 $\pm$ 0.83 & 0.01 $\pm$ 0.82 & -0.01 $\pm$ 0.82\\
    \midrule
    \rowcolor{row-highlight}
    MCMC: \verb|MCMC-diffusion| & 4.38 $\pm$ 1.81 & 4.45 $\pm$ 1.92 & -0.02 $\pm$ 0.72 & -0.02 $\pm$ 0.72 & 0.03 $\pm$ 0.73 & -0.01 $\pm$ 0.73 & -0.00 $\pm$ 0.74 & 0.02 $\pm$ 0.73 & 0.00 $\pm$ 0.74 & 0.00 $\pm$ 0.74\\
    \midrule
    NS: \verb|Polychord| & 4.80 $\pm$ 1.74 & 4.80 $\pm$ 1.76 & 0.00 $\pm$ 0.56 & 0.00 $\pm$ 0.56 & 0.00 $\pm$ 0.56 & -0.01 $\pm$ 0.56 & 0.00 $\pm$ 0.57 & 0.01 $\pm$ 0.57 & -0.02 $\pm$ 0.57 & 0.01 $\pm$ 0.57\\
    \midrule
    \rowcolor{row-highlight}
    NS: \verb|JaxNS| & 5.11 $\pm$ 1.60 & 5.11 $\pm$ 1.61 & 0.00 $\pm$ 0.50 & 0.00 $\pm$ 0.51 & 0.01 $\pm$ 0.50 & -0.01 $\pm$ 0.51 & 0.00 $\pm$ 0.51 & 0.00 $\pm$ 0.50 & 0.00 $\pm$ 0.51 & 0.00 $\pm$ 0.51\\
    \bottomrule
    \end{tabular}
    \caption{Posterior mean and error for $10D$ spike-slab test function.}
    \label{tab:spikeslab_means}
\end{table}

\newpage

\begin{figure}
    \centering
    \includegraphics[width=\textwidth]{results/wasserstein_upper.png}
    \caption{Upper bound on Wasserstein distance from reference posterior for each problem. The black dashed line is the assumed rule of thumb for convergence for each problem in the unit-cube parameterised domain.}
    \label{fig:wasserstein_upper}
\end{figure}


\begin{table}[h!]
    \hspace*{-2.5cm}
    \tiny
    \centering
    \begin{tabular}{ccccccc}
    \toprule
    Algorithm & $n_s$ & $\theta_s$ & $\omega_b$ & $\omega_c$ & $\tau$ & $\ln(A_s)$ \\\\
    \midrule
    MCMC:emcee & 0.0066 & 0.0031 & 0.0030 & 0.00081 & 0.0011 & 0.0011 \\
    \midrule
    MCMC:ptemcee & 0.0046 & 0.0011 & 0.0010 & 0.00047 & 0.0016 & 0.0017 \\
    \midrule
    MCMC:zeus & 0.0062 & 0.0036 & 0.0029 & 0.0020 & 0.0043 & 0.0035 \\
    \midrule
    MCMC:MCMC-diffusion & 0.0063 & 0.0019 & 0.0015 & 0.00064 & 0.0015 & 0.0017 \\
    \midrule
    dynesty & 0.0084 & 0.0014 & 0.0009 & 0.0007 & 0.0020 & 0.0022 \\
    \midrule
    jaxns & 0.0136 & 0.0045 & 0.0013 & 0.0005 & 0.0022 & 0.0023 \\
    \midrule
    nautilus & 0.0048 & 0.0013 & 0.0012 & 0.0008 & 0.0030 & 0.0022 \\
    \midrule
    nessai & 0.0088 & 0.0013 & 0.0016 & 0.0008 & 0.0017 & 0.0024 \\
    \midrule
    pymultinest & 0.0050 & 0.0011 & 0.0016 & 0.0006 & 0.0026 & 0.0025 \\
    \midrule
    pypolychord & 0.0066 & 0.0021 & 0.0017 & 0.0006 & 0.0018 & 0.0018 \\
    \midrule
    ultranest & 0.0053 & 0.0024 & 0.0017 & 0.0005 & 0.0026 & 0.0028 \\
    \bottomrule
    \end{tabular}
    \caption{Marginal Wasserstein-1 distances for each parameter from reference posterior for CMB for cheapest converging NS runs. An `--' indicates none of the completed runs converged.}
    \label{tab:CMB_wasserstein}
\end{table}


\begin{table}[h!]
    \hspace*{-2.5cm}
    \tiny
    \centering
    \begin{tabular}{ccccccccccccc}
    \toprule
    Algorithm & $M_2$ & $m_f^2$ & $m_{H_u}^2$ & $m_{H_d}^2$ & $A_u$ & $A_d$  & $\tan (\beta)$ & $m_t$ & $\alpha_s$ & $\rho_0$ & $\sigma_s$ & $\sigma_l$\\\\
    \midrule
    MCMC:emcee & 0.62 & 0.25 & 0.81 & 0.64 & 0.23 & 0.55 & 0.57 & 0.45 & 0.49 & 0.32 & 0.44 & 0.41 \\
    \midrule
    MCMC:ptemcee & 0.0001 & 0.0013 & 0.0006 & 0.0019 & 0.0008 & 0.0003 & 0.0002 & 0.0002 & 0.0006 & 0.0023 & 0.0038 & 0.0031 \\
    \midrule
    MCMC:zeus & 0.81 & 0.33 & 0.85 & 0.77 & 0.32 & 0.47 & 0.76 & 0.41 & 0.44 & 0.40 & 0.42 & 0.43  \\
    \midrule
    MCMC:MCMC-diffusion & 0.0000 & 0.0024 & 0.0008 & 0.0026 & 0.0010 & 0.0007 & 0.0001 & 0.0001 & 0.0008 & 0.0023 & 0.0063 & 0.0029 \\
    \midrule
    dynesty & 0.0000 & 0.0012 & 0.0005 & 0.0016 & 0.0011 & 0.0009 & 0.0002 & 0.0002 & 0.0004 & 0.0023 & 0.0027 & 0.0013 \\
    \midrule
    jaxns & 0.0000 & 0.0096 & 0.0003 & 0.0027 & 0.0095 & 0.0030 & 0.0000 & 0.0001 & 0.0003 & 0.0004 & 0.0123 & 0.0336 \\
    \midrule
    nautilus & 0.0000 & 0.0039 & 0.0008 & 0.0011 & 0.0044 & 0.0024 & 0.0003 & 0.0002 & 0.0012 & 0.0028 & 0.0071 & 0.0044 \\
    \midrule
    nessai & 0.0001 & 0.0081 & 0.0007 & 0.0023 & 0.0050 & 0.0053 & 0.0005 & 0.0005 & 0.0014 & 0.0021 & 0.0178 & 0.0107 \\
    \midrule
    pymultinest & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    pypolychord & 0.0001 & 0.0022 & 0.0011 & 0.0021 & 0.0027 & 0.0027 & 0.0004 & 0.0003 & 0.0015 & 0.0021 & 0.0087 & 0.0061 \\
    \midrule
    ultranest & 0.0001 & 0.0019 & 0.0007 & 0.0019 & 0.0016 & 0.0017 & 0.0002 & 0.0001 & 0.0008 & 0.0024 & 0.0059 & 0.0033 \\
    \bottomrule
    \end{tabular}
    \caption{Marginal Wasserstein-1 distances for each parameter from reference posterior for MSSM7 for cheapest converging NS runs. An `--' indicates none of the completed runs converged.}
    \label{tab:MSSM7_wasserstein}
\end{table}


\begin{table}[h!]
    \hspace*{-2.5cm}
    \tiny
    \centering
    \begin{tabular}{ccccccccccc}
    \toprule
    Algorithm & $\theta_{1}$ & $\theta_{2}$ & $\theta_{3}$ & $\theta_{4}$ & $\theta_{5}$ & $\theta_{6}$ & $\theta_{7}$ & $\theta_{8}$ & $\theta_{9}$ & $\theta_{10}$ \\\\
    \midrule
    MCMC:emcee & 0.092 & 0.087 & 0.048 & 0.087 & 0.043 & 0.048 & 0.065 & 0.046 & 0.057 & 0.082 \\
    \midrule
    MCMC:ptemcee & 0.086 & 0.062 & 0.062 & 0.055 & 0.073 & 0.050 & 0.070 & 0.059 & 0.060 & 0.053 \\
    \midrule
    MCMC:zeus & 0.066 & 0.028 & 0.11 & 0.040 & 0.042 & 0.044 & 0.078 & 0.032 & 0.030 & 0.050 \\
    \midrule
    MCMC:MCMC-diffusion & 0.029 & 0.019 & 0.057 & 0.047 & 0.036 & 0.022 & 0.075 & 0.040 & 0.045 & 0.050 \\
    \midrule
    dynesty & 0.0272 & 0.0175 & 0.0357 & 0.0354 & 0.0208 & 0.0189 & 0.0472 & 0.0134 & 0.0158 & 0.0292 \\
    \midrule
    jaxns & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    nautilus & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    nessai & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    pymultinest & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    pypolychord & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    ultranest & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \bottomrule
    \end{tabular}
    \caption{Marginal Wasserstein-1 distances for each parameter from reference posterior for Eggbox for cheapest converging NS runs. An `--' indicates none of the completed runs converged.}
    \label{tab:eggbox_wasserstein}
\end{table}


\begin{table}[h!]
    \hspace*{-2.5cm}
    \tiny
    \centering
    \begin{tabular}{ccccccccccc}
    \toprule
    Algorithm & $\theta_{1}$ & $\theta_{2}$ & $\theta_{3}$ & $\theta_{4}$ & $\theta_{5}$ & $\theta_{6}$ & $\theta_{7}$ & $\theta_{8}$ & $\theta_{9}$ & $\theta_{10}$ \\\\
    \midrule
    MCMC:emcee & 0.037 & 0.027 & 0.027 & 0.026 & 0.027 & 0.026 & 0.036 & 0.026 & 0.034 & 0.030 \\
    \midrule
    MCMC:ptemcee & 0.0090 & 0.0062 & 0.0071 & 0.011 & 0.0052 & 0.0048 & 0.0040 & 0.0024 & 0.0076 & 0.0040 \\
    \midrule
    MCMC:zeus & 0.20 & 0.020 & 0.20 & 0.20 & 0.19 & 0.19 & 0.19 & 0.19 & 0.20 & 0.20 \\
    \midrule
    MCMC:MCMC-diffusion & 0.013 & 0.0060 & 0.010 & 0.0072 & 0.015 & 0.011 & 0.0068 & 0.010 & 0.012 & 0.013 \\
    \midrule
dynesty & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    jaxns & 0.0193 & 0.0147 & 0.0391 & 0.0070 & 0.0130 & 0.0072 & 0.0220 & 0.0132 & 0.0151 & 0.0045 \\
    \midrule
    nautilus & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    nessai & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    pymultinest & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    pypolychord & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    ultranest & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \bottomrule
    \end{tabular}
    \caption{Marginal Wasserstein-1 distances for each parameter from reference posterior for rastrigin for cheapest converging NS runs. An `--' indicates none of the completed runs converged.}
    \label{tab:rastrigin_wasserstein}
\end{table}


\begin{table}[h!]
    \hspace*{-2.5cm}
    \tiny
    \centering
    \begin{tabular}{ccccccccccc}
    \toprule
    Algorithm & $\theta_{1}$ & $\theta_{2}$ & $\theta_{3}$ & $\theta_{4}$ & $\theta_{5}$ & $\theta_{6}$ & $\theta_{7}$ & $\theta_{8}$ & $\theta_{9}$ & $\theta_{10}$ \\\\
    \midrule
    MCMC:emcee & 0.028 & 0.031 & 0.041 & 0.049 & 0.055 & 0.058 & 0.058 & 0.055 & 0.052 & 0.059 \\
    \midrule
    MCMC:ptemcee & 0.0025 & 0.0010 & 0.0014 & 0.0018 & 0.0025 & 0.0032 & 0.0041 & 0.0051 & 0.0070 & 0.012 \\
    \midrule
    MCMC:zeus & 0.028 & 0.0066 & 0.0084 & 0.010 & 0.011 & 0.012 & 0.013 & 0.014 & 0.015 & 0.021 \\
    \midrule
    MCMC:MCMC-diffusion & 0.0032 & 0.0012 & 0.0021 & 0.0036 & 0.0044 & 0.0050 & 0.0069 & 0.0098 & 0.016 & 0.021 \\
    \midrule
    dynesty & 0.0011 & 0.0018 & 0.0026 & 0.0038 & 0.0054 & 0.0068 & 0.0082 & 0.0095 & 0.012 & 0.019 \\
    \midrule
    jaxns & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    nautilus & 0.0015 & 0.0018 & 0.0026 & 0.0034 & 0.0046 & 0.0063 & 0.0080 & 0.0104 & 0.0147 & 0.0258 \\
    \midrule
    nessai & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    pymultinest & 0.0021 & 0.0022 & 0.0031 & 0.0041 & 0.0056 & 0.0070 & 0.0086 & 0.011 & 0.014 & 0.023 \\
    \midrule
    pypolychord & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    ultranest & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \bottomrule
    \end{tabular}
    \caption{Marginal Wasserstein-1 distances for each parameter from reference posterior for rosenbrock for cheapest converging NS runs. An `--' indicates none of the completed runs converged.}
    \label{tab:rosenbrock_wasserstein}
\end{table}


\begin{table}[h!]
    \hspace*{-2.5cm}
    \tiny
    \centering
    \begin{tabular}{ccccccccccc}
    \toprule
    Algorithm & $\theta_{1}$ & $\theta_{2}$ & $\theta_{3}$ & $\theta_{4}$ & $\theta_{5}$ & $\theta_{6}$ & $\theta_{7}$ & $\theta_{8}$ & $\theta_{9}$ & $\theta_{10}$ \\\\
    \midrule
    MCMC:emcee & 0.19 & 0.19 & 0.028 & 0.028 & 0.028 & 0.028 & 0.028 & 0.028 & 0.027 & 0.028 \\
    \midrule
    MCMC:ptemcee & 0.20 & 0.20 & 0.028 & 0.029 & 0.029 & 0.029 & 0.029 & 0.029 & 0.029 & 0.029 \\
    \midrule
    MCMC:zeus & 0.14 & 0.14 & 0.022 & 0.021 & 0.022 & 0.021 & 0.021 & 0.021 & 0.022 & 0.022 \\
    \midrule
    MCMC:MCMC-diffusion & 0.0046 & 0.0041 & 0.0013 & 0.0013 & 0.0013 & 0.0016 & 0.0014 & 0.0016 & 0.0013 & 0.0014 \\
    \midrule
    dynesty & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    jaxns & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    nautilus & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    nessai & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    pymultinest & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \midrule
    pypolychord & 0.0072 & 0.0077 & 0.0021 & 0.0018 & 0.0020 & 0.0023 & 0.0023 & 0.0023 & 0.0021 & 0.0023 \\
    \midrule
    ultranest & -- & -- & -- & -- & -- & -- & -- & -- & -- & -- \\
    \bottomrule
    \end{tabular}
    \caption{Marginal Wasserstein-1 distances for each parameter from reference posterior for spikeslab for cheapest converging NS runs. An `--' indicates none of the completed runs converged.}
    \label{tab:spikeslab_wasserstein}
\end{table}

\newpage

\subsection{Cosmology-Planck}

\begin{table}[h!]
    \tiny
    \centering
    \begin{tabular}{ccccccc}
    \toprule
    Algorithm & $n_s$ & $\theta_s$ & $\omega_b$ & $\omega_c$ & $\tau$ & $\ln(A_s)$\\
    \midrule
    MCMC: \verb|emcee| & 0.960 $\pm$ 0.001 & 1.04 $\pm$ 0.00 & 0.0222 $\pm$ 0.0001 & 0.119 $\pm$ 0.001 & 0.0616 $\pm$ 0.0021 & 3.08 $\pm$ 0.01 \\
    \midrule
    \rowcolor{row-highlight}
    MCMC: \verb|ptemcee| & 0.960 $\pm$ 0.001 & 1.04 $\pm$ 0.00 & 0.0223 $\pm$ 0.0001 & 0.119 $\pm$ 0.001 & 0.0616 $\pm$ 0.0021 & 3.08 $\pm$ 0.01 \\
    \midrule
    MCMC: \verb|zeus| & 0.960 $\pm$ 0.001 & 1.04 $\pm$ 0.00 & 0.0223 $\pm$ 0.0001 & 0.119 $\pm$ 0.001 & 0.0617 $\pm$ 0.0021 & 3.08 $\pm$ 0.01 \\
    \midrule
    MCMC: \verb|MCMC-diffusion| & 0.960 $\pm$ 0.001 & 1.04 $\pm$ 0.00 & 0.0223 $\pm$ 0.0001 & 0.119 $\pm$ 0.001 & 0.0618 $\pm$ 0.0021 & 3.09 $\pm$ 0.01 \\
    \midrule
    NS: \verb|Dynesty| & 0.960 $\pm$ 0.002 & 1.04 $\pm$ 0.00 & 0.0223 $\pm$ 0.0001 & 0.119 $\pm$ 0.001 & 0.0617 $\pm$ 0.0021 & 3.08 $\pm$ 0.01 \\
    \midrule
    \rowcolor{row-highlight}
    NS: \verb|Multinest| & 0.960 $\pm$ 0.002 & 1.04 $\pm$ 0.00 & 0.0223 $\pm$ 0.0001 & 0.119 $\pm$ 0.001 & 0.0617 $\pm$ 0.0020 & 3.08 $\pm$ 0.00 \\
    \midrule
    NS: \verb|Polychord| & 0.960 $\pm$ 0.001 & 1.04 $\pm$ 0.00 & 0.0223 $\pm$ 0.0001 & 0.119 $\pm$ 0.001 & 0.0615 $\pm$ 0.0021 & 3.08 $\pm$ 0.01 \\
    \midrule
    NS: \verb|Nessai| & 0.960 $\pm$ 0.002 & 1.04 $\pm$ 0.00 & 0.0223 $\pm$ 0.0001 & 0.119 $\pm$ 0.001 & 0.0615 $\pm$ 0.0020 & 3.08 $\pm$ 0.00 \\
    \midrule
    NS: \verb|JaxNS| & 0.960 $\pm$ 0.001 & 1.04 $\pm$ 0.00 & 0.0223 $\pm$ 0.0001 & 0.119 $\pm$ 0.001 & 0.0616 $\pm$ 0.0021 & 3.08 $\pm$ 0.00 \\
    \midrule
    NS: \verb|Nautilus| & 0.960 $\pm$ 0.02 & 1.04 $\pm$ 0.00 & 0.0223 $\pm$ 0.0001 & 0.119 $\pm$ 0.001 & 0.0617 $\pm$ 0.0022 & 3.08 $\pm$ 0.00 \\
    \midrule
    NS: \verb|Ultranest| & 0.960 $\pm$ 0.002 & 1.04 $\pm$ 0.00 & 0.0223 $\pm$ 0.0001 & 0.119 $\pm$ 0.001 & 0.0615 $\pm$ 0.0021 & 3.08 $\pm$ 0.00 \\
    \bottomrule
    \end{tabular}
    \caption{Posterior mean and error for the CMB likelihood.}
    \label{tab:cmb_means}
\end{table}

\subsection{Particle physics - LHC}

\begin{landscape}
\newpage
\begin{table}[p]
    % \hspace*{-3.8cm}
    % \tiny
    \fontsize{4}{4}\selectfont
    \centering
    \begin{tabular}{ccccccccccccc}
    \toprule
    Algorithm & $M_2$ & $m_f^2$ & $m_{H_u}^2$ & $m_{H_d}^2$ & $A_u$ & $A_d$  & $\tan (\beta)$ & $m_t$ & $\alpha_s$ & $\rho_0$ & $\sigma_s$ & $\sigma_l$\\
    \midrule
    MCMC: \verb|emcee| & 1730 $\pm$ 3800 & 6.08 $\times 10^7  \pm$ 2.67 $\times 10^7$ & -1.80 $\times 10^7  \pm$ 2.36 $\times 10^7$ & -1.05 $\times 10^7  \pm$ 5.02 $\times 10^7$ & 1170 $\pm$ 6190 & 1500 $\pm$ 5240 & 31.5 $\pm$ 18.4 & 173 $\pm$ 1.13 & 0.119 $\pm$ 0.001 & 0.402 $\pm$ 0.143 & 42.3 $\pm$ 12.0 & 59.0 $\pm$ 16.1\\
    \midrule
    \rowcolor{row-highlight}
    MCMC: \verb|ptemcee| & -7160 $\pm$ 10 & 8.56 $\times 10^7  \pm$ 0.49 $\times 10^7$ & -9.91 $\times 10^7  \pm$ 0.08 $\times 10^7$ & 9.66 $\times 10^7  \pm$ 0.34 $\times 10^7$ & 1510 $\pm$ 970 & -9510 $\pm$ 500 & 69.9 $\pm$ 0.1 & 171 $\pm$ 0.01 & 0.120 $\pm$ 0.001 & 0.212 $\pm$ 0.012 & 63.1 $\pm$ 3.8 & 81.6 $\pm$ 3.73\\
    \midrule
    MCMC: \verb|zeus| & 4390 $\pm$ 3380 & 5.29 $\times 10^7  \pm$ 2.45 $\times 10^7$ & -2.07 $\times 10^7  \pm$ 2.14 $\times 10^7$ & -2.09 $\times 10^7  \pm$ 4.32 $\times 10^7$ & 2120 $\pm$ 7380 & 496 $\pm$ 5773 & 26.2 $\pm$ 18.6 & 173 $\pm$ 1.27 & 0.119 $\pm$ 0.001 & 0.424 $\pm$ 0.140 & 44.7 $\pm$ 11.0 & 58.2 $\pm$ 15.1\\
    \midrule
    MCMC: \verb|MCMC-diffusion| & -7160 $\pm$ 10 & 8.55 $\times 10^7  \pm$ 0.50 $\times 10^7$ & -9.91 $\times 10^7  \pm$ 0.08 $\times 10^7$ & 9.66 $\times 10^7  \pm$ 0.35 $\times 10^7$ & 1510 $\pm$ 990 & -9510 $\pm$ 490 & 69.9 $\pm$ 0.1 & 171 $\pm$ 0.01 & 0.120 $\pm$ 0.001 & 0.212 $\pm$ 0.013 & 63.0 $\pm$ 3.8 & 81.0 $\pm$ 3.74\\
    \midrule
    NS: \verb|Dynesty| & -7160 $\pm$ 10 & 8.57 $\times 10^7  \pm$ 0.49 $\times 10^7$ & -9.90 $\times 10^7  \pm$ 0.07 $\times 10^7$ & 9.66 $\times 10^7  \pm$ 0.34 $\times 10^7$ & 1500 $\pm$ 970 & -9520 $\pm$ 480 & 69.9 $\pm$ 0.1 & 171 $\pm$ 0.01 & 0.120 $\pm$ 0.001 & 0.213 $\pm$ 0.013 & 63.1 $\pm$ 3.8 & 81.3 $\pm$ 3.75\\
    \midrule
    NS: \verb|JaxNS| & -7160 $\pm$ 10 & 9.38 $\times 10^7  \pm$ 0.54 $\times 10^7$ & -6.45 $\times 10^6  \pm$ 5.45 $\times 10^6$ & 7.68 $\times 10^7  \pm$ 0.82 $\times 10^7$ & -9860 $\pm$ 130 & 9670 $\pm$ 310 & 42.4 $\pm$ 3.0 & 171 $\pm$ 0.10 & 0.120 $\pm$ 0.001 & 0.201 $\pm$ 0.001 & 66.5 $\pm$ 0.5 & 32.1 $\pm$ 1.08\\
    \midrule
    \rowcolor{row-highlight}
    NS: \verb|Nautilus| & -7162 $\pm$ 10 & 8.58 $\times 10^7  \pm$ 0.51 $\times 10^7$ & -9.91 $\times 10^7  \pm$ 0.07 $\times 10^7$ & 9.67 $\times 10^7  \pm$ 0.32 $\times 10^7$ & 1530 $\pm$ 1030 & -9490 $\pm$ 510 & 69.9 $\pm$ 0.1 & 171 $\pm$ 0.01 & 0.120 $\pm$ 0.000 & 0.213 $\pm$ 0.013 & 62.9 $\pm$ 3.9 & 81.1 $\pm$ 3.79\\
    \midrule
    NS: \verb|Ultranest| & -7160 $\pm$ 10 & 8.55 $\times 10^7  \pm$ 0.51 $\times 10^7$ & -9.91 $\times 10^7  \pm$ 0.07 $\times 10^7$ & 9.66 $\times 10^7  \pm$ 0.35 $\times 10^7$ & 1510 $\pm$ 1000 & -9510 $\pm$ 470 & 69.9 $\pm$ 0.1 & 171 $\pm$ 0.01 & 0.120 $\pm$ 0.001 & 0.213 $\pm$ 0.013 & 62.9 $\pm$ 3.9 & 81.2 $\pm$ 3.71\\
    \bottomrule
    \end{tabular}
    \caption{Posterior mean and error for the MSSM7 likelihood.}
    \label{tab:mssm7_means}
\end{table}
\end{landscape}
\newpage

\section{MCMC: Number of walkers}

\begin{table}[h]
    \hspace*{-1.5cm}
    \tiny
    \centering
    \begin{tabular}{ccccccc}
    \toprule

    Algorithm & Eggbox & Rosenbrock & Rastrigin & Spike-slab & Cosmology - Planck & Particle physics - LHC\\
    \midrule
    MCMC: \verb|zeus| & 100 & 50 & 30 & 30 & 12 & 12\\
    \midrule
    MCMC: \verb|ptemcee| & 100 & 100 & 30 & 30 & 12 & 12\\
    \midrule
    MCMC: \verb|emcee| & 100 & 2000 & 30 & 30 & 12 & 12\\
    \midrule
    MCMC: \verb|MCMC-diffusion| & 30 & 30 & 30 & 30 & 30 & 30\\

    \bottomrule
    \end{tabular}
    \caption{Number of MCMC walkers for each test problem.}
    \label{tab:walkers}
\end{table}

\bibliographystyle{JHEP}
\bibliography{HighDimensionalSampling}

\end{document}


```

4. **Bibliographic Information:**
```bbl
\providecommand{\href}[2]{#2}\begingroup\raggedright\begin{thebibliography}{100}

\bibitem{AbdusSalam:2020rdj}
{\bf \GB, \textsf{MasterCode}, \textsf{Fittino}, \textsf{HEPfit} and
  \textsf{BayesFits}} Collaboration, S.~S. AbdusSalam et~al., {\it {Simple and
  statistically sound strategies for analysing physical theories}},
  \href{http://arxiv.org/abs/2012.09874}{{\tt arXiv:2012.09874}}.

\bibitem{gambit}
{\bf \GB} Collaboration, P.~{Athron}, C.~{Bal{\'a}zs}, T.~{Bringmann},
  A.~{Buckley}, M.~{Chrz{\c a}szcz}, J.~{Conrad}, J.~M. {Cornell}, L.~A. {Dal},
  H.~{Dickinson}, J.~{Edsj{\"o}}, B.~{Farmer}, T.~E. {Gonzalo}, P.~{Jackson},
  A.~{Krislock}, A.~{Kvellestad}, J.~{Lundberg}, J.~{McKay}, F.~{Mahmoudi},
  G.~D. {Martinez}, A.~{Putze}, A.~{Raklev}, J.~{Ripken}, C.~{Rogan},
  A.~{Saavedra}, C.~{Savage}, P.~{Scott}, S.-H. {Seo}, N.~{Serra},
  C.~{Weniger}, M.~{White}, and S.~{Wild}, {\it {GAMBIT: The Global and Modular
  Beyond-the-Standard-Model Inference Tool}},  {\em \epjc} {\bf 77} (May, 2017)
  784, [\href{http://arxiv.org/abs/1705.07908}{{\tt arXiv:1705.07908}}].
  Addendum in \cite{gambit_addendum}.

\bibitem{hepfit}
J.~De~Blas et~al., {\it {$\texttt{HEPfit}$: a Code for the Combination of
  Indirect and Direct Constraints on High Energy Physics Models}},  {\em \epjc}
  {\bf 80} (2019) 456, [\href{http://arxiv.org/abs/1910.14012}{{\tt
  arXiv:1910.14012}}].

\bibitem{MasterCodemSUGRA}
O.~{Buchmueller}, R.~{Cavanaugh}, D.~{Colling}, A.~{de Roeck}, M.~J. {Dolan},
  J.~R. {Ellis}, H.~{Fl{\"a}cher}, S.~{Heinemeyer}, K.~A. {Olive},
  S.~{Rogerson}, F.~J. {Ronga}, and G.~{Weiglein}, {\it {Frequentist analysis
  of the parameter space of minimal supergravity}},  {\em \epjc} {\bf 71}
  (Mar., 2011) 1583, [\href{http://arxiv.org/abs/1011.6118}{{\tt
  arXiv:1011.6118}}].

\bibitem{NuFIT}
I.~Esteban, M.~C. Gonzalez-Garcia, M.~Maltoni, I.~Martinez-Soler, and
  T.~Schwetz, ``\textsf{NuFit 3.2}.'' \url{http://www.nu-fit.org} (accessed
  2018-05-08), 2018.

\bibitem{2110.11421}
{\bf Euclid} Collaboration, S.~Nesseris et~al., {\it {Euclid: Forecast
  constraints on consistency tests of the \ensuremath{\Lambda}CDM model}},
  {\em Astron. Astrophys.} {\bf 660} (2022) A67,
  [\href{http://arxiv.org/abs/2110.11421}{{\tt arXiv:2110.11421}}].

\bibitem{2002.11406}
N.~Weinrich, Y.~G\'enolini, M.~Boudaud, L.~Derome, and D.~Maurin, {\it
  {Combined analysis of AMS-02 (Li,Be,B)/C, N/O, 3He, and 4He data}},  {\em
  Astron. Astrophys.} {\bf 639} (2020) A131,
  [\href{http://arxiv.org/abs/2002.11406}{{\tt arXiv:2002.11406}}].

\bibitem{Chang:2022jgo}
C.~Chang, P.~Scott, T.~E. Gonzalo, F.~Kahlhoefer, A.~Kvellestad, and M.~White,
  {\it {Global fits of simplified models for dark matter with GAMBIT: I. Scalar
  and fermionic models with s-channel vector mediators}},  {\em Eur. Phys. J.
  C} {\bf 83} (2023), no.~3 249, [\href{http://arxiv.org/abs/2209.13266}{{\tt
  arXiv:2209.13266}}].

\bibitem{Chang:2023cki}
C.~Chang, P.~Scott, T.~E. Gonzalo, F.~Kahlhoefer, and M.~White, {\it {Global
  fits of simplified models for dark matter with GAMBIT: II. Vector dark matter
  with an s-channel vector mediator}},  {\em Eur. Phys. J. C} {\bf 83} (2023),
  no.~8 692, [\href{http://arxiv.org/abs/2303.08351}{{\tt arXiv:2303.08351}}].
  [Erratum: Eur.Phys.J.C 83, 768 (2023)].

\bibitem{GAMBIT:2021rlp}
{\bf GAMBIT} Collaboration, P.~Athron et~al., {\it {Thermal WIMPs and the scale
  of new physics: global fits of Dirac dark matter effective field theories}},
  {\em Eur. Phys. J. C} {\bf 81} (2021), no.~11 992,
  [\href{http://arxiv.org/abs/2106.02056}{{\tt arXiv:2106.02056}}].

\bibitem{2302.12124}
A.~Barontini, A.~Candido, J.~M. Cruz-Martinez, F.~Hekhorn, and C.~Schwan, {\it
  {Pineline: Industrialization of High-Energy Theory Predictions}},
  \href{http://arxiv.org/abs/2302.12124}{{\tt arXiv:2302.12124}}.

\bibitem{2206.12465}
{\bf xFitter} Collaboration, H.~Abdolmaleki et~al., {\it {xFitter: An Open
  Source QCD Analysis Framework. A resource and reference document for the
  Snowmass study}},  in {\em DPF Snowmass Community Planning Exercise}, 6,
  2022.
\newblock \href{http://arxiv.org/abs/2206.12465}{{\tt arXiv:2206.12465}}.

\bibitem{2201.06586}
D.~Liu, C.~Sun, and J.~Gao, {\it {Machine learning of log-likelihood functions
  in global analysis of parton distributions}},  {\em JHEP} {\bf 08} (2022)
  088, [\href{http://arxiv.org/abs/2201.06586}{{\tt arXiv:2201.06586}}].

\bibitem{2106.06390}
S.~Brown, G.~Niculescu, and I.~Niculescu, {\it {Machine learning representation
  of the F2 structure function over all charted Q2 and x range}},  {\em Phys.
  Rev. C} {\bf 104} (2021), no.~6 064321,
  [\href{http://arxiv.org/abs/2106.06390}{{\tt arXiv:2106.06390}}].

\bibitem{2111.03086}
M.~C. Gonzalez-Garcia, M.~Maltoni, and T.~Schwetz, {\it {NuFIT: Three-Flavour
  Global Analyses of Neutrino Oscillation Experiments}},  {\em Universe} {\bf
  7} (2021), no.~12 459, [\href{http://arxiv.org/abs/2111.03086}{{\tt
  arXiv:2111.03086}}].

\bibitem{2007.14792}
I.~Esteban, M.~C. Gonzalez-Garcia, M.~Maltoni, T.~Schwetz, and A.~Zhou, {\it
  {The fate of hints: updated global analysis of three-flavor neutrino
  oscillations}},  {\em JHEP} {\bf 09} (2020) 178,
  [\href{http://arxiv.org/abs/2007.14792}{{\tt arXiv:2007.14792}}].

\bibitem{2007.08526}
K.~J. Kelly, P.~A.~N. Machado, S.~J. Parke, Y.~F. Perez-Gonzalez, and R.~Z.
  Funchal, {\it {Neutrino mass ordering in light of recent data}},  {\em Phys.
  Rev. D} {\bf 103} (2021), no.~1 013004,
  [\href{http://arxiv.org/abs/2007.08526}{{\tt arXiv:2007.08526}}].

\bibitem{2003.08511}
F.~Capozzi, E.~Di~Valentino, E.~Lisi, A.~Marrone, A.~Melchiorri, and
  A.~Palazzo, {\it {Global constraints on absolute neutrino masses and their
  ordering}},  {\em Phys. Rev. D} {\bf 95} (2017), no.~9 096014,
  [\href{http://arxiv.org/abs/2003.08511}{{\tt arXiv:2003.08511}}]. [Addendum:
  Phys.Rev.D 101, 116013 (2020)].

\bibitem{2207.10088}
J.~C. Criado, R.~Kogler, and M.~Spannowsky, {\it {Quantum fitting framework
  applied to effective field theories}},  {\em Phys. Rev. D} {\bf 107} (2023),
  no.~1 015023, [\href{http://arxiv.org/abs/2207.10088}{{\tt
  arXiv:2207.10088}}].

\bibitem{2103.14022}
J.~E. Camargo-Molina, R.~Enberg, and J.~L\"ofgren, {\it {A new perspective on
  the electroweak phase transition in the Standard Model Effective Field
  Theory}},  {\em JHEP} {\bf 10} (2021) 127,
  [\href{http://arxiv.org/abs/2103.14022}{{\tt arXiv:2103.14022}}].

\bibitem{2012.02779}
J.~Ellis, M.~Madigan, K.~Mimasu, V.~Sanz, and T.~You, {\it {Top, Higgs, Diboson
  and Electroweak Fit to the Standard Model Effective Field Theory}},  {\em
  JHEP} {\bf 04} (2021) 279, [\href{http://arxiv.org/abs/2012.02779}{{\tt
  arXiv:2012.02779}}].

\bibitem{2003.05432}
R.~Aoude, T.~Hurth, S.~Renner, and W.~Shepherd, {\it {The impact of flavour
  data on global fits of the MFV SMEFT}},  {\em JHEP} {\bf 12} (2020) 113,
  [\href{http://arxiv.org/abs/2003.05432}{{\tt arXiv:2003.05432}}].

\bibitem{2210.16337}
J.~Ellis, K.~A. Olive, V.~C. Spanos, and I.~D. Stamou, {\it {The CMSSM survives
  Planck, the LHC, LUX-ZEPLIN, Fermi-LAT, H.E.S.S. and IceCube}},  {\em Eur.
  Phys. J. C} {\bf 83} (2023), no.~3 246,
  [\href{http://arxiv.org/abs/2210.16337}{{\tt arXiv:2210.16337}}].

\bibitem{2207.05103}
J.~Dickinson, S.~Bein, S.~Heinemeyer, J.~Hiltbrand, J.~Hirschauer, W.~Hopkins,
  E.~Lipeles, M.~Mrowietz, and N.~Strobbe, {\it {A Grand Scan of the pMSSM
  Parameter Space for Snowmass 2021}},
  \href{http://arxiv.org/abs/2207.05103}{{\tt arXiv:2207.05103}}.

\bibitem{2202.11753}
H.~Bahl, E.~Fuchs, S.~Heinemeyer, J.~Katzy, M.~Menen, K.~Peters, M.~Saimpert,
  and G.~Weiglein, {\it {Constraining the ${\mathcal {C}}{\mathcal {P}}$
  structure of Higgs-fermion couplings with a global LHC fit, the electron EDM
  and baryogenesis}},  {\em Eur. Phys. J. C} {\bf 82} (2022), no.~7 604,
  [\href{http://arxiv.org/abs/2202.11753}{{\tt arXiv:2202.11753}}].

\bibitem{2101.07811}
A.~Crivellin, D.~M\"uller, and L.~Schnell, {\it {Combined constraints on first
  generation leptoquarks}},  {\em Phys. Rev. D} {\bf 103} (2021), no.~11
  115023, [\href{http://arxiv.org/abs/2101.07811}{{\tt arXiv:2101.07811}}].
  [Addendum: Phys.Rev.D 104, 055020 (2021)].

\bibitem{2012.02799}
M.~J. Ramsey-Musolf and J.~C. Vasquez, {\it {Left-right symmetry and electric
  dipole moments. A global analysis}},  {\em Phys. Lett. B} {\bf 815} (2021)
  136136, [\href{http://arxiv.org/abs/2012.02799}{{\tt arXiv:2012.02799}}].

\bibitem{2007.02985}
M.~M\"uhlleitner, M.~O.~P. Sampaio, R.~Santos, and J.~Wittbrodt, {\it
  {ScannerS: parameter scans in extended scalar sectors}},  {\em Eur. Phys. J.
  C} {\bf 82} (2022), no.~3 198, [\href{http://arxiv.org/abs/2007.02985}{{\tt
  arXiv:2007.02985}}].

\bibitem{2201.07240}
S.~Iranipour and M.~Ubiali, {\it {A new generation of simultaneous fits to LHC
  data using deep learning}},  {\em JHEP} {\bf 05} (2022) 032,
  [\href{http://arxiv.org/abs/2201.07240}{{\tt arXiv:2201.07240}}].

\bibitem{DelDebbio:2021whr}
L.~Del~Debbio, T.~Giani, and M.~Wilson, {\it {Bayesian approach to inverse
  problems: an application to NNPDF closure testing}},  {\em Eur. Phys. J. C}
  {\bf 82} (2022), no.~4 330, [\href{http://arxiv.org/abs/2111.05787}{{\tt
  arXiv:2111.05787}}].

\bibitem{HERAFitterdevelopersTeam:2015cre}
{\bf HERAFitter developers' Team} Collaboration, S.~Camarda et~al., {\it {QCD
  analysis of $W$- and $Z$-boson production at Tevatron}},  {\em Eur. Phys. J.
  C} {\bf 75} (2015), no.~9 458, [\href{http://arxiv.org/abs/1503.05221}{{\tt
  arXiv:1503.05221}}].

\bibitem{2112.07274}
J.~de~Blas, M.~Ciuchini, E.~Franco, A.~Goncalves, S.~Mishima, M.~Pierini,
  L.~Reina, and L.~Silvestrini, {\it {Global analysis of electroweak data in
  the Standard Model}},  {\em Phys. Rev. D} {\bf 106} (2022), no.~3 033003,
  [\href{http://arxiv.org/abs/2112.07274}{{\tt arXiv:2112.07274}}].

\bibitem{2104.07680}
A.~J. Buras, A.~Crivellin, F.~Kirk, C.~A. Manzari, and M.~Montull, {\it {Global
  analysis of leptophilic Z' bosons}},  {\em JHEP} {\bf 06} (2021) 068,
  [\href{http://arxiv.org/abs/2104.07680}{{\tt arXiv:2104.07680}}].

\bibitem{2101.00428}
E.~Carragher, W.~Handley, D.~Murnane, P.~Stangl, W.~Su, M.~White, and A.~G.
  Williams, {\it {Convergent Bayesian Global Fits of 4D Composite Higgs
  Models}},  {\em JHEP} {\bf 05} (2021) 237,
  [\href{http://arxiv.org/abs/2101.00428}{{\tt arXiv:2101.00428}}].

\bibitem{Anisha:2020ggj}
Anisha, S.~Das~Bakshi, J.~Chakrabortty, and S.~K. Patra, {\it {Connecting
  electroweak-scale observables to BSM physics through EFT and Bayesian
  statistics}},  {\em Phys. Rev. D} {\bf 103} (2021), no.~7 076007,
  [\href{http://arxiv.org/abs/2010.04088}{{\tt arXiv:2010.04088}}].

\bibitem{2008.01113}
A.~Crivellin, F.~Kirk, C.~A. Manzari, and M.~Montull, {\it {Global Electroweak
  Fit and Vector-Like Leptons in Light of the Cabibbo Angle Anomaly}},  {\em
  JHEP} {\bf 12} (2020) 166, [\href{http://arxiv.org/abs/2008.01113}{{\tt
  arXiv:2008.01113}}].

\bibitem{Kowalska_2019}
K.~Kowalska, D.~Kumar, and E.~M. Sessolo, {\it Implications for new physics in
  {\textdollar}{\textdollar}b{\textbackslash}rightarrow s {\textbackslash}mu
  {\textbackslash}mu {\textdollar}{\textdollar} transitions after recent
  measurements by belle and {LHCb}},  {\em The European Physical Journal C}
  {\bf 79} (oct, 2019).

\bibitem{2006.11237}
P.~F. de~Salas, D.~V. Forero, S.~Gariazzo, P.~Mart\'\i{}nez-Mirav\'e, O.~Mena,
  C.~A. Ternes, M.~T\'ortola, and J.~W.~F. Valle, {\it {2020 global
  reassessment of the neutrino oscillation picture}},  {\em JHEP} {\bf 02}
  (2021) 071, [\href{http://arxiv.org/abs/2006.11237}{{\tt arXiv:2006.11237}}].

\bibitem{DellOro:2019pqi}
S.~Dell'Oro, S.~Marcocci, and F.~Vissani, {\it {Empirical Inference on the
  Majorana Mass of the Ordinary Neutrinos}},  {\em Phys. Rev. D} {\bf 100}
  (2019), no.~7 073003, [\href{http://arxiv.org/abs/1909.05381}{{\tt
  arXiv:1909.05381}}].

\bibitem{NuFit15}
J.~{Bergstr{\"o}m}, M.~C. {Gonzalez-Garcia}, M.~{Maltoni}, and T.~{Schwetz},
  {\it {Bayesian global analysis of neutrino oscillation data}},  {\em \jhep}
  {\bf 9} (Sept., 2015) 200, [\href{http://arxiv.org/abs/1507.04366}{{\tt
  arXiv:1507.04366}}].

\bibitem{Bose:2012qh}
D.~Bose, L.~Brayeur, M.~Casier, K.~D. De~Vries, G.~Golup, and
  N.~Van~Eijndhoven, {\it {Bayesian approach for counting experiment statistics
  applied to a neutrino point source analysis}},  {\em Astropart. Phys.} {\bf
  50-52} (2013) 57--64, [\href{http://arxiv.org/abs/1212.2008}{{\tt
  arXiv:1212.2008}}].

\bibitem{Romero-Wolf:2017xqe}
A.~Romero-Wolf and M.~Ave, {\it {Bayesian Inference Constraints on
  Astrophysical Production of Ultra-high Energy Cosmic Rays and Cosmogenic
  Neutrino Flux Predictions}},  {\em JCAP} {\bf 07} (2018) 025,
  [\href{http://arxiv.org/abs/1712.07290}{{\tt arXiv:1712.07290}}].

\bibitem{Capel:2020txc}
F.~Capel, D.~J. Mortlock, and C.~Finley, {\it {Bayesian constraints on the
  astrophysical neutrino source population from IceCube data}},  {\em Phys.
  Rev. D} {\bf 101} (2020), no.~12 123017,
  [\href{http://arxiv.org/abs/2005.02395}{{\tt arXiv:2005.02395}}]. [Erratum:
  Phys.Rev.D 105, 129904 (2022)].

\bibitem{Fowlie:2017fya}
A.~Fowlie, {\it {DAMPE squib? Significance of the 1.4 TeV DAMPE excess}},  {\em
  Phys. Lett. B} {\bf 780} (2018) 181--184,
  [\href{http://arxiv.org/abs/1712.05089}{{\tt arXiv:1712.05089}}].

\bibitem{SSDM}
{\bf \GB} Collaboration, P.~{Athron}, C.~{Bal{\'a}zs}, T.~{Bringmann},
  A.~{Buckley}, M.~{Chrz{\c a}szcz}, J.~{Conrad}, J.~M. {Cornell}, L.~A. {Dal},
  J.~{Edsj{\"o}}, B.~{Farmer}, P.~{Jackson}, F.~{Kahlhoefer}, A.~{Krislock},
  A.~{Kvellestad}, J.~{McKay}, F.~{Mahmoudi}, G.~D. {Martinez}, A.~{Putze},
  A.~{Raklev}, C.~{Rogan}, A.~{Saavedra}, C.~{Savage}, P.~{Scott}, N.~{Serra},
  C.~{Weniger}, and M.~{White}, {\it {Status of the scalar singlet dark matter
  model}},  {\em \epjc} {\bf 77} (May, 2017) 568,
  [\href{http://arxiv.org/abs/1705.07931}{{\tt arXiv:1705.07931}}].

\bibitem{SSDM2}
P.~Athron, J.~M. Cornell, F.~Kahlhoefer, J.~McKay, P.~Scott, and S.~Wild, {\it
  {Impact of vacuum stability, perturbativity and XENON1T on global fits of
  $\mathbb {Z}_2$ and $\mathbb {Z}_3$ scalar singlet dark matter}},  {\em
  \epjc} {\bf 78} (2018), no.~10 830,
  [\href{http://arxiv.org/abs/1806.11281}{{\tt arXiv:1806.11281}}].

\bibitem{Athron:2018hpc}
{\bf \GB} Collaboration, P.~Athron et~al., {\it {Global analyses of Higgs
  portal singlet dark matter models using GAMBIT}},  {\em Eur. Phys. J. C} {\bf
  79} (2019), no.~1 38, [\href{http://arxiv.org/abs/1808.10465}{{\tt
  arXiv:1808.10465}}].

\bibitem{Liem:2016xpm}
S.~{Liem}, G.~{Bertone}, F.~{Calore}, R.~R. {de Austri}, T.~M.~P. {Tait},
  R.~{Trotta}, and C.~{Weniger}, {\it {Effective field theory of dark matter: a
  global analysis}},  {\em \jhep} {\bf 9} (Sept., 2016) 77,
  [\href{http://arxiv.org/abs/1603.05994}{{\tt arXiv:1603.05994}}].

\bibitem{Ashton:2021anp}
G.~Ashton and C.~Talbot, {\it {B\,ilby-MCMC: an MCMC sampler for
  gravitational-wave inference}},  {\em Mon. Not. Roy. Astron. Soc.} {\bf 507}
  (2021), no.~2 2037--2051, [\href{http://arxiv.org/abs/2106.08730}{{\tt
  arXiv:2106.08730}}].

\bibitem{BilbyMCMCGuide}
G.~Ashton and C.~Talbot, ``Bilby mcmc guide.''

\bibitem{Ashton:2018jfp}
G.~Ashton et~al., {\it {BILBY: A user-friendly Bayesian inference library for
  gravitational-wave astronomy}},  {\em Astrophys. J. Suppl.} {\bf 241} (2019),
  no.~2 27, [\href{http://arxiv.org/abs/1811.02042}{{\tt arXiv:1811.02042}}].

\bibitem{Athron:2017ard}
{\bf \GB} Collaboration, P.~Athron et~al., {\it {GAMBIT: The Global and Modular
  Beyond-the-Standard-Model Inference Tool}},  {\em Eur. Phys. J. C} {\bf 77}
  (2017), no.~11 784, [\href{http://arxiv.org/abs/1705.07908}{{\tt
  arXiv:1705.07908}}]. [Addendum: Eur.Phys.J.C 78, 98 (2018)].

\bibitem{Buchmueller:2007zk}
O.~Buchmueller, R.~Cavanaugh, A.~De~Roeck, S.~Heinemeyer, G.~Isidori,
  P.~Paradisi, F.~Ronga, A.~Weber, and G.~Weiglein, {\it {Prediction for the
  Lightest Higgs Boson Mass in the CMSSM using Indirect Experimental
  Constraints}},  {\em Phys. Lett. B} {\bf 657} (2007) 87--94,
  [\href{http://arxiv.org/abs/0707.3447}{{\tt arXiv:0707.3447}}].

\bibitem{2111.13083}
R.~Arjona, L.~Espinosa-Portales, J.~Garc\'\i{}a-Bellido, and S.~Nesseris, {\it
  {A GREAT model comparison against the cosmological constant}},  {\em Phys.
  Dark Univ.} {\bf 36} (2022) 101029,
  [\href{http://arxiv.org/abs/2111.13083}{{\tt arXiv:2111.13083}}].

\bibitem{Hergt:2021qlh}
L.~T. Hergt, W.~J. Handley, M.~P. Hobson, and A.~N. Lasenby, {\it {Bayesian
  evidence for the tensor-to-scalar ratio $r$ and neutrino masses $m_\nu$:
  Effects of uniform vs logarithmic priors}},  {\em Phys. Rev. D} {\bf 103}
  (2021) 123511, [\href{http://arxiv.org/abs/2102.11511}{{\tt
  arXiv:2102.11511}}].

\bibitem{2101.11882}
L.-F. Wang, S.-J. Jin, J.-F. Zhang, and X.~Zhang, {\it {Forecast for
  cosmological parameter estimation with gravitational-wave standard sirens
  from the LISA-Taiji network}},  {\em Sci. China Phys. Mech. Astron.} {\bf 65}
  (2022), no.~1 210411, [\href{http://arxiv.org/abs/2101.11882}{{\tt
  arXiv:2101.11882}}].

\bibitem{2001.05393}
S.-J. Jin, D.-Z. He, Y.~Xu, J.-F. Zhang, and X.~Zhang, {\it {Forecast for
  cosmological parameter estimation with gravitational-wave standard siren
  observation from the Cosmic Explorer}},  {\em JCAP} {\bf 03} (2020) 051,
  [\href{http://arxiv.org/abs/2001.05393}{{\tt arXiv:2001.05393}}].

\bibitem{2002.04035}
O.~H.~E. Philcox, M.~M. Ivanov, M.~Simonovi\'c, and M.~Zaldarriaga, {\it
  {Combining Full-Shape and BAO Analyses of Galaxy Power Spectra: A
  1.6\textbackslash{}\% CMB-independent constraint on H$_0$}},  {\em JCAP} {\bf
  05} (2020) 032, [\href{http://arxiv.org/abs/2002.04035}{{\tt
  arXiv:2002.04035}}].

\bibitem{DarkMachinesHighDimensionalSamplingGroup:2021wkt}
{\bf DarkMachines High Dimensional Sampling Group} Collaboration, C.~Bal\'azs
  et~al., {\it {A comparison of optimisation algorithms for high-dimensional
  particle and astrophysics applications}},  {\em JHEP} {\bf 05} (2021) 108,
  [\href{http://arxiv.org/abs/2101.04525}{{\tt arXiv:2101.04525}}].

\bibitem{Jeffreys:1939xee}
H.~Jeffreys, {\em {The Theory of Probability}}.
\newblock Oxford Classic Texts in the Physical Sciences. Oxford University
  Press, 1939.

\bibitem{d2003bayesian}
G.~D'agostini, {\em Bayesian reasoning in data analysis: A critical
  introduction}.
\newblock World Scientific, 2003.

\bibitem{sivia2006data}
D.~Sivia and J.~Skilling, {\em Data analysis: a Bayesian tutorial}.
\newblock OUP Oxford, 2006.

\bibitem{Andrieu_2009}
C.~Andrieu and G.~O. Roberts, {\it The pseudo-marginal approach for efficient
  monte carlo computations},  {\em The Annals of Statistics} {\bf 37} (Apr.,
  2009).

\bibitem{Sharma:2017wfu}
S.~Sharma, {\it {Markov Chain Monte Carlo Methods for Bayesian Data Analysis in
  Astronomy}},  {\em Ann. Rev. Astron. Astrophys.} {\bf 55} (2017) 213--259,
  [\href{http://arxiv.org/abs/1706.01629}{{\tt arXiv:1706.01629}}].

\bibitem{Hogg:2017akh}
D.~W. Hogg and D.~Foreman-Mackey, {\it {Data analysis recipes: Using Markov
  Chain Monte Carlo}},  {\em Astrophys. J. Suppl.} {\bf 236} (2018), no.~1 11,
  [\href{http://arxiv.org/abs/1710.06068}{{\tt arXiv:1710.06068}}].

\bibitem{Skilling04}
J.~{Skilling}, {\it {Nested Sampling}},  in {\em American Institute of Physics
  Conference Series} (R.~{Fischer}, R.~{Preuss}, and U.~V. {Toussaint}, eds.),
  vol.~735 of {\em American Institute of Physics Conference Series},
  pp.~395--405, Nov., 2004.

\bibitem{skilling2006}
J.~Skilling, {\it Nested sampling for general bayesian computation},  {\em
  Bayesian Anal.} {\bf 1} (12, 2006) 833--859.

\bibitem{Ashton:2022grj}
G.~Ashton et~al., {\it {Nested sampling for physical scientists}},  {\em
  Nature} {\bf 2} (2022) [\href{http://arxiv.org/abs/2205.15570}{{\tt
  arXiv:2205.15570}}].

\bibitem{Buchner_2023}
J.~Buchner, {\it Nested sampling methods},  {\em Statistics Surveys} {\bf 17}
  (Jan., 2023).

\bibitem{Fowlie:2021gmr}
A.~Fowlie, S.~Hoof, and W.~Handley, {\it {Nested Sampling for Frequentist
  Computation: Fast Estimation of Small p-Values}},  {\em Phys. Rev. Lett.}
  {\bf 128} (2022), no.~2 021801, [\href{http://arxiv.org/abs/2105.13923}{{\tt
  arXiv:2105.13923}}].

\bibitem{2023arXiv231102726M}
C.~C. {Margossian} and A.~{Gelman}, {\it {For how many iterations should we run
  Markov chain Monte Carlo?}},  {\em arXiv e-prints} (Nov., 2023)
  arXiv:2311.02726, [\href{http://arxiv.org/abs/2311.02726}{{\tt
  arXiv:2311.02726}}].

\bibitem{2019S&C....29..891H}
E.~{Higson}, W.~{Handley}, M.~{Hobson}, and A.~{Lasenby}, {\it {Dynamic nested
  sampling: an improved algorithm for parameter estimation and evidence
  calculation}},  {\em Statistics and Computing} {\bf 29} (Sept., 2019)
  891--913, [\href{http://arxiv.org/abs/1704.03459}{{\tt arXiv:1704.03459}}].

\bibitem{Heavens:2017afc}
A.~Heavens, Y.~Fantaye, A.~Mootoovaloo, H.~Eggers, Z.~Hosenie, S.~Kroon, and
  E.~Sellentin, {\it {Marginal Likelihoods from Monte Carlo Markov Chains}},
  \href{http://arxiv.org/abs/1704.03472}{{\tt arXiv:1704.03472}}.

\bibitem{Srinivasan:2024uax}
R.~Srinivasan, M.~Crisostomi, R.~Trotta, E.~Barausse, and M.~Breschi, {\it
  {$floZ$: Improved Bayesian evidence estimation from posterior samples with
  normalizing flows}},  \href{http://arxiv.org/abs/2404.12294}{{\tt
  arXiv:2404.12294}}.

\bibitem{Polanska:2024arc}
A.~Polanska, M.~A. Price, D.~Piras, A.~Spurio~Mancini, and J.~D. McEwen, {\it
  {Learned harmonic mean estimation of the Bayesian evidence with normalizing
  flows}},  \href{http://arxiv.org/abs/2405.05969}{{\tt arXiv:2405.05969}}.

\bibitem{andrieu2008tutorial}
C.~Andrieu and J.~Thoms, {\it {A tutorial on adaptive MCMC}},  {\em Statistics
  and computing} {\bf 18} (2008) 343--373.

\bibitem{Hunt-Smith:2023ccp}
N.~T. Hunt-Smith, W.~Melnitchouk, F.~Ringer, N.~Sato, A.~W. Thomas, and M.~J.
  White, {\it {Accelerating Markov Chain Monte Carlo sampling with diffusion
  models}},  \href{http://arxiv.org/abs/2309.01454}{{\tt arXiv:2309.01454}}.

\bibitem{Christensen:2001gj}
N.~Christensen, R.~Meyer, L.~Knox, and B.~Luey, {\it {II. Bayesian methods for
  cosmological parameter estimation from cosmic microwave background
  measurements}},  {\em Class. Quant. Grav.} {\bf 18} (2001) 2677,
  [\href{http://arxiv.org/abs/astro-ph/0103134}{{\tt astro-ph/0103134}}].

\bibitem{Lewis:2002ah}
A.~Lewis and S.~Bridle, {\it {Cosmological parameters from CMB and other data:
  A Monte Carlo approach}},  {\em \prd} {\bf 66} (2002) 103511,
  [\href{http://arxiv.org/abs/astro-ph/0205436}{{\tt astro-ph/0205436}}].

\bibitem{Baltz:2004aw}
E.~A. Baltz and P.~Gondolo, {\it {Markov chain Monte Carlo exploration of
  minimal supergravity with implications for dark matter}},  {\em JHEP} {\bf
  10} (2004) 052, [\href{http://arxiv.org/abs/hep-ph/0407039}{{\tt
  hep-ph/0407039}}].

\bibitem{RuizdeAustri:2006iwb}
R.~Ruiz~de Austri, R.~Trotta, and L.~Roszkowski, {\it {A Markov chain Monte
  Carlo analysis of the CMSSM}},  {\em JHEP} {\bf 05} (2006) 002,
  [\href{http://arxiv.org/abs/hep-ph/0602028}{{\tt hep-ph/0602028}}].

\bibitem{2013PASP..125..306F}
D.~{Foreman-Mackey}, D.~W. {Hogg}, D.~{Lang}, and J.~{Goodman}, {\it {emcee:
  The MCMC Hammer}},  {\em \pasp} {\bf 125} (Mar., 2013) 306,
  [\href{http://arxiv.org/abs/1202.3665}{{\tt arXiv:1202.3665}}].

\bibitem{2019JOSS....4.1864F}
D.~{Foreman-Mackey}, W.~{Farr}, M.~{Sinha}, A.~{Archibald}, D.~{Hogg},
  J.~{Sanders}, J.~{Zuntz}, P.~{Williams}, A.~{Nelson}, M.~{de Val-Borro},
  T.~{Erhardt}, I.~{Pashchenko}, and O.~{Pla}, {\it {emcee v3: A Python
  ensemble sampling toolkit for affine-invariant MCMC}},  {\em The Journal of
  Open Source Software} {\bf 4} (Nov., 2019) 1864,
  [\href{http://arxiv.org/abs/1911.07688}{{\tt arXiv:1911.07688}}].

\bibitem{2010CAMCS...5...65G}
J.~{Goodman} and J.~{Weare}, {\it {Ensemble samplers with affine invariance}},
  {\em Communications in Applied Mathematics and Computational Science} {\bf 5}
  (Jan., 2010) 65--80.

\bibitem{2016MNRAS.455.1919V}
W.~D. {Vousden}, W.~M. {Farr}, and I.~{Mandel}, {\it {Dynamic temperature
  selection for parallel tempering in Markov chain Monte Carlo simulations}},
  {\em \mnras} {\bf 455} (Jan., 2016) 1919--1937,
  [\href{http://arxiv.org/abs/1501.05823}{{\tt arXiv:1501.05823}}].

\bibitem{PhysRevLett.57.2607}
R.~H. Swendsen and J.-S. Wang, {\it {Replica Monte Carlo Simulation of
  Spin-Glasses}},  {\em Phys. Rev. Lett.} {\bf 57} (Nov, 1986) 2607--2609.

\bibitem{geyer1994estimating}
C.~J. Geyer, {\it Estimating normalizing constants and reweighting mixtures},
  tech. rep., School of Statistics, University of Minnesota, 1994.

\bibitem{2005PCCP....7.3910E}
D.~J. {Earl} and M.~W. {Deem}, {\it {Parallel tempering: Theory, applications,
  and new perspectives}},  {\em Physical Chemistry Chemical Physics
  (Incorporating Faraday Transactions)} {\bf 7} (Jan., 2005) 3910,
  [\href{http://arxiv.org/abs/physics/0508111}{{\tt physics/0508111}}].

\bibitem{Karamanis:2021tsx}
M.~Karamanis, F.~Beutler, and J.~A. Peacock, {\it {zeus: a python
  implementation of ensemble slice sampling for efficient Bayesian parameter
  inference}},  {\em Mon. Not. Roy. Astron. Soc.} {\bf 508} (2021), no.~3
  3589--3603, [\href{http://arxiv.org/abs/2105.03468}{{\tt arXiv:2105.03468}}].

\bibitem{Neal2003}
R.~M. Neal, {\it Slice sampling},  {\em The Annals of Statistics} {\bf 31}
  (June, 2003).

\bibitem{Karamanis:2020zss}
M.~Karamanis and F.~Beutler, {\it {Ensemble slice sampling}},  {\em Stat.
  Comput.} {\bf 31} (2021), no.~5 61,
  [\href{http://arxiv.org/abs/2002.06212}{{\tt arXiv:2002.06212}}].

\bibitem{albert2015simulated}
C.~Albert, {\it A simulated annealing approach to bayesian inference},  2015.

\bibitem{0809.3437}
F.~{Feroz}, M.~P. {Hobson}, and M.~{Bridges}, {\it {MULTINEST: an efficient and
  robust Bayesian inference tool for cosmology and particle physics}},  {\em
  \mnras} {\bf 398} (Oct., 2009) 1601--1614,
  [\href{http://arxiv.org/abs/0809.3437}{{\tt arXiv:0809.3437}}].

\bibitem{1306.2144}
F.~{Feroz}, M.~P. {Hobson}, E.~{Cameron}, and A.~N. {Pettitt}, {\it {Importance
  Nested Sampling and the MultiNest Algorithm}},
  \href{http://arxiv.org/abs/1306.2144}{{\tt arXiv:1306.2144}}.

\bibitem{Handley:2015}
W.~J. {Handley}, M.~P. {Hobson}, and A.~N. {Lasenby}, {\it {POLYCHORD:
  next-generation nested sampling}},  {\em \mnras} {\bf 453} (Nov., 2015)
  4384--4398, [\href{http://arxiv.org/abs/1506.00171}{{\tt arXiv:1506.00171}}].

\bibitem{Speagle:2019ivv}
J.~S. Speagle, {\it {dynesty: a dynamic nested sampling package for estimating
  Bayesian posteriors and evidences}},  {\em Mon. Not. Roy. Astron. Soc.} {\bf
  493} (2020), no.~3 3132--3158, [\href{http://arxiv.org/abs/1904.02180}{{\tt
  arXiv:1904.02180}}].

\bibitem{2016S&C....26..383B}
J.~{Buchner}, {\it {A statistical test for Nested Sampling algorithms}},  {\em
  Statistics and Computing} {\bf 26} (Jan., 2016) 383--392,
  [\href{http://arxiv.org/abs/1407.5459}{{\tt arXiv:1407.5459}}].

\bibitem{2019PASP..131j8005B}
J.~{Buchner}, {\it {Collaborative Nested Sampling: Big Data versus Complex
  Physical Models}},  {\em \pasp} {\bf 131} (Oct., 2019) 108005,
  [\href{http://arxiv.org/abs/1707.04476}{{\tt arXiv:1707.04476}}].

\bibitem{Williams:2023ppp}
M.~J. Williams, J.~Veitch, and C.~Messenger, {\it {Importance nested sampling
  with normalising flows}},  {\em Mach. Learn. Sci. Tech.} {\bf 4} (2023),
  no.~3 035011, [\href{http://arxiv.org/abs/2302.08526}{{\tt
  arXiv:2302.08526}}].

\bibitem{2020arXiv201215286A}
J.~G. {Albert}, {\it {JAXNS: a high-performance nested sampling package based
  on JAX}},  {\em arXiv e-prints} (Dec., 2020) arXiv:2012.15286,
  [\href{http://arxiv.org/abs/2012.15286}{{\tt arXiv:2012.15286}}].

\bibitem{lange2023nautilus}
J.~U. Lange, {\it Nautilus: boosting bayesian importance nested sampling with
  deep learning},  2023.

\bibitem{2022PSFor...5...46B}
J.~{Buchner}, {\it {Comparison of Step Samplers for Nested Sampling}},  in {\em
  Physical Sciences Forum}, vol.~5 of {\em Physical Sciences Forum}, p.~46,
  Dec., 2022.
\newblock \href{http://arxiv.org/abs/2211.09426}{{\tt arXiv:2211.09426}}.

\bibitem{doi:10.1080/01621459.1996.10476956}
M.~K. Cowles and B.~P. Carlin, {\it {Markov Chain Monte Carlo Convergence
  Diagnostics: A Comparative Review}},  {\em Journal of the American
  Statistical Association} {\bf 91} (1996), no.~434 883--904.

\bibitem{geyer2011introduction}
C.~J. Geyer, {\it {Introduction to Markov Chain Monte Carlo}},  in {\em
  Handbook of Markov Chain Monte Carlo} (S.~Brooks, A.~Gelman, G.~Jones, and
  X.-L. Meng, eds.).
\newblock Chapman and Hall/{CRC}, May, 2011.

\bibitem{arviz_2019}
R.~Kumar, C.~Carroll, A.~Hartikainen, and O.~Martin, {\it {ArviZ a unified
  library for exploratory analysis of Bayesian models in Python}},  {\em
  Journal of Open Source Software} {\bf 4} (2019), no.~33 1143.

\bibitem{10.2307/2246093}
A.~Gelman and D.~B. Rubin, {\it Inference from iterative simulation using
  multiple sequences},  {\em Statistical Science} {\bf 7} (1992), no.~4
  457--472.

\bibitem{doi:10.1080/10618600.1998.10474787}
S.~P. Brooks and A.~Gelman, {\it General methods for monitoring convergence of
  iterative simulations},  {\em Journal of Computational and Graphical
  Statistics} {\bf 7} (1998), no.~4 434--455.

\bibitem{2019arXiv190308008V}
A.~{Vehtari}, A.~{Gelman}, D.~{Simpson}, B.~{Carpenter}, and P.-C.
  {B{\"u}rkner}, {\it {Rank-normalization, folding, and localization: An
  improved $\widehat R$ for assessing convergence of MCMC}},  {\em Bayesian
  Analysis} {\bf 16} (Mar., 2019) [\href{http://arxiv.org/abs/1903.08008}{{\tt
  arXiv:1903.08008}}].

\bibitem{2021arXiv211013017M}
C.~C. {Margossian}, M.~D. {Hoffman}, P.~{Sountsov}, L.~{Riou-Durand},
  A.~{Vehtari}, and A.~{Gelman}, {\it {Nested $\widehat R$: Assessing the
  convergence of Markov chain Monte Carlo when running many short chains}},
  \href{http://arxiv.org/abs/2110.13017}{{\tt arXiv:2110.13017}}.

\bibitem{Fowlie:2020mzs}
A.~Fowlie, W.~Handley, and L.~Su, {\it {Nested sampling cross-checks using
  order statistics}},  {\em Mon. Not. Roy. Astron. Soc.} {\bf 497} (2020),
  no.~4 5256--5263, [\href{http://arxiv.org/abs/2006.03371}{{\tt
  arXiv:2006.03371}}].

\bibitem{Rosenbrock1960}
H.~H. Rosenbrock, {\it An automatic method for finding the greatest or least
  value of a function},  {\em The Computer Journal} {\bf 3} (Mar., 1960)
  175â€“184.

\bibitem{rastrigin1974systems}
L.~A. Rastrigin, {\it Systems of extremal control},  {\em Nauka} (1974).

\bibitem{2023arXiv231203911L}
P.~{Lemos}, N.~{Malkin}, W.~{Handley}, Y.~{Bengio}, Y.~{Hezaveh}, and
  L.~{Perreault-Levasseur}, {\it {Improving Gradient-guided Nested Sampling for
  Posterior Inference}},  {\em arXiv e-prints} (Dec., 2023) arXiv:2312.03911,
  [\href{http://arxiv.org/abs/2312.03911}{{\tt arXiv:2312.03911}}].

\bibitem{lesgourgues2011cosmic}
J.~Lesgourgues, {\it The cosmic linear anisotropy solving system (class) i:
  Overview},  2011.

\bibitem{Cole_2022}
A.~Cole, B.~K. Miller, S.~J. Witte, M.~X. Cai, M.~W. Grootes, F.~Nattino, and
  C.~Weniger, {\it Fast and credible likelihood-free cosmology with truncated
  marginal neural ratio estimation},  {\em Journal of Cosmology and
  Astroparticle Physics} {\bf 2022} (Sept., 2022) 004.

\bibitem{SpurioMancini:2021ppk}
A.~Spurio~Mancini, D.~Piras, J.~Alsing, B.~Joachimi, and M.~P. Hobson, {\it
  {CosmoPower: emulating cosmological power spectra for accelerated Bayesian
  inference from next-generation surveys}},  {\em Mon. Not. Roy. Astron. Soc.}
  {\bf 511} (2022), no.~2 1771--1788,
  [\href{http://arxiv.org/abs/2106.03846}{{\tt arXiv:2106.03846}}].

\bibitem{klambauer2017selfnormalizing}
G.~Klambauer, T.~Unterthiner, A.~Mayr, and S.~Hochreiter, {\it Self-normalizing
  neural networks},  2017.

\bibitem{kingma2017adam}
D.~P. Kingma and J.~Ba, {\it Adam: A method for stochastic optimization},
  2017.

\bibitem{Piras:2024dml}
D.~Piras, A.~Polanska, A.~Spurio~Mancini, M.~A. Price, and J.~D. McEwen, {\it
  {The future of cosmological likelihood-based inference: accelerated
  high-dimensional parameter estimation and model comparison}},
  \href{http://arxiv.org/abs/2405.12965}{{\tt arXiv:2405.12965}}.

\bibitem{DESI:2024mwx}
{\bf DESI} Collaboration, A.~G. Adame et~al., {\it {DESI 2024 VI: Cosmological
  Constraints from the Measurements of Baryon Acoustic Oscillations}},
  \href{http://arxiv.org/abs/2404.03002}{{\tt arXiv:2404.03002}}.

\bibitem{MSSM}
{\bf \GB} Collaboration, P.~{Athron}, C.~{Bal{\'a}zs}, T.~{Bringmann},
  A.~{Buckley}, M.~{Chrz{\c a}szcz}, J.~{Conrad}, J.~M. {Cornell}, L.~A. {Dal},
  J.~{Edsj{\"o}}, B.~{Farmer}, P.~{Jackson}, A.~{Krislock}, A.~{Kvellestad},
  F.~{Mahmoudi}, G.~D. {Martinez}, A.~{Putze}, A.~{Raklev}, C.~{Rogan},
  A.~{Saavedra}, C.~{Savage}, P.~{Scott}, N.~{Serra}, C.~{Weniger}, and
  M.~{White}, {\it {A global fit of the MSSM with GAMBIT}},  {\em \epjc} {\bf
  77} (Dec., 2017) 879, [\href{http://arxiv.org/abs/1705.07917}{{\tt
  arXiv:1705.07917}}].

\bibitem{2012CoPhC.183..960B}
A.~{Buckley}, A.~{Shilton}, and M.~J. {White}, {\it {Fast supersymmetry
  phenomenology at the Large Hadron Collider using machine learning
  techniques}},  {\em \cpc} {\bf 183} (Apr., 2012) 960--970,
  [\href{http://arxiv.org/abs/1106.4613}{{\tt arXiv:1106.4613}}].

\bibitem{Brooijmans:2020yij}
G.~Brooijmans et~al., {\it {Les Houches 2019 Physics at TeV Colliders: New
  Physics Working Group Report}},  in {\em {11th Les Houches Workshop on
  Physics at TeV Colliders}: {PhysTeV Les Houches}}, 2, 2020.
\newblock \href{http://arxiv.org/abs/2002.12220}{{\tt arXiv:2002.12220}}.

\bibitem{kish}
L.~Kish, {\it Survey sampling},  {\em Biometrische Zeitschrift} {\bf 10}
  (1968), no.~1 88--89.

\bibitem{https://doi.org/10.1111/insr.12500}
V.~Elvira, L.~Martino, and C.~P. Robert, {\it Rethinking the effective sample
  size},  {\em International Statistical Review} {\bf 90} (2022), no.~3
  525--550.

\bibitem{bda}
A.~Gelman, J.~B. Carlin, H.~S. Stern, D.~B. Dunson, A.~Vehtari, and D.~B.
  Rubin, {\em Bayesian data analysis}.
\newblock Chapman \& Hall/CRC Texts in Statistical Science Series. CRC,
  third~ed., 2013.

\bibitem{anesthetic}
W.~Handley, {\it anesthetic: nested sampling visualisation},  {\em The Journal
  of Open Source Software} {\bf 4} (Jun, 2019) 1414.

\bibitem{2018BayAn..13..873H}
E.~{Higson}, W.~{Handley}, M.~{Hobson}, and A.~{Lasenby}, {\it {Sampling Errors
  in Nested Sampling Parameter Estimation}},  {\em Bayesian Analysis} {\bf 13}
  (Mar., 2018) 873--896, [\href{http://arxiv.org/abs/1703.09701}{{\tt
  arXiv:1703.09701}}].

\bibitem{higson2018nestcheck}
E.~Higson, {\it nestcheck: error analysis, diagnostic tests and plots for
  nested sampling calculations},  {\em Journal of Open Source Software} {\bf 3}
  (2018), no.~29 916.

\bibitem{higson2019diagnostic}
E.~Higson, W.~Handley, M.~Hobson, and A.~Lasenby, {\it nestcheck: diagnostic
  tests for nested sampling calculations},  {\em Monthly Notices of the Royal
  Astronomical Society} {\bf 483} (2019), no.~2 2044--2056.

\bibitem{gambit_addendum}
{\bf \GB} Collaboration, P.~{Athron}, C.~{Bal{\'a}zs}, T.~{Bringmann},
  A.~{Buckley}, M.~{Chrz{\c a}szcz}, J.~{Conrad}, J.~M. {Cornell}, L.~A. {Dal},
  H.~{Dickinson}, J.~{Edsj{\"o}}, B.~{Farmer}, T.~E. {Gonzalo}, P.~{Jackson},
  A.~{Krislock}, A.~{Kvellestad}, J.~{Lundberg}, J.~{McKay}, F.~{Mahmoudi},
  G.~D. {Martinez}, A.~{Putze}, A.~{Raklev}, J.~{Ripken}, C.~{Rogan},
  A.~{Saavedra}, C.~{Savage}, P.~{Scott}, S.-H. {Seo}, N.~{Serra},
  C.~{Weniger}, M.~{White}, and S.~{Wild}, {\it {GAMBIT: The Global and Modular
  Beyond-the-Standard-Model Inference Tool. Addendum for GAMBIT 1.1:
  Mathematica backends, SUSYHD interface and updated likelihoods}},  {\em
  \epjc} {\bf 78} (2018) 98, [\href{http://arxiv.org/abs/1705.07908}{{\tt
  arXiv:1705.07908}}]. Addendum to \cite{gambit}.

\end{thebibliography}\endgroup

```

5. **Author Information:**
- Lead Author: {'name': 'Joshua Albert'}
- Full Authors List:
```yaml
Joshua Albert: {}
Csaba Balazs: {}
Andrew Fowlie: {}
Will Handley:
  pi:
    start: 2020-10-01
    thesis: null
  postdoc:
    start: 2016-10-01
    end: 2020-10-01
    thesis: null
  phd:
    start: 2012-10-01
    end: 2016-09-30
    supervisors:
    - Anthony Lasenby
    - Mike Hobson
    thesis: 'Kinetic initial conditions for inflation: theory, observation and methods'
  original_image: images/originals/will_handley.jpeg
  image: /assets/group/images/will_handley.jpg
  links:
    Webpage: https://willhandley.co.uk
Nicholas Hunt-Smith: {}
Roberto Ruiz de Austri: {}
Martin White: {}

```
This YAML file provides a concise snapshot of an academic research group. It lists members by name along with their academic rolesâ€”ranging from Part III and summer projects to MPhil, PhD, and postdoctoral positionsâ€”with corresponding dates, thesis topics, and supervisor details. Supplementary metadata includes image paths and links to personal or departmental webpages. A dedicated "coi" section profiles senior researchers, highlighting the groupâ€™s collaborative mentoring network and career trajectories in cosmology, astrophysics, and Bayesian data analysis.



====================================================================================
Final Output Instructions
====================================================================================

- Combine all data sources to create a seamless, engaging narrative.
- Follow the exact Markdown output format provided at the top.
- Do not include any extra explanation, commentary, or wrapping beyond the specified Markdown.
- Validate that every bibliographic reference with a DOI or arXiv identifier is converted into a Markdown link as per the examples.
- Validate that every Markdown author link corresponds to a link in the author information block.
- Before finalizing, confirm that no LaTeX citation commands or other undesired formatting remain.
- Before finalizing, confirm that the link to the paper itself [2409.18464](https://arxiv.org/abs/2409.18464) is featured in the first sentence.

Generate only the final Markdown output that meets all these requirements.

{% endraw %}